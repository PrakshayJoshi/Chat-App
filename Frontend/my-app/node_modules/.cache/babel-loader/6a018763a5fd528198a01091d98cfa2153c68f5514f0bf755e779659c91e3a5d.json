{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n    const initializeAutocomplete = () => {\n      const input = inputRef.current;\n      const autocomplete = new window.google.maps.places.Autocomplete(input);\n      autocomplete.setFields(['geometry', 'address_components']);\n      autocomplete.addListener('place_changed', () => onPlaceChanged(autocomplete));\n      setAutocomplete(autocomplete);\n    };\n    initializeAutocomplete();\n  }, []);\n  const onPlaceChanged = async autocomplete => {\n    const place = autocomplete.getPlace();\n    if (!place.geometry) {\n      console.error('Place contains no geometry');\n      return;\n    }\n    const location = place.geometry.location;\n    const viewport = place.geometry.viewport;\n    const boundary = {\n      northeast: {\n        lat: viewport.getNorthEast().lat(),\n        lng: viewport.getNorthEast().lng()\n      },\n      southwest: {\n        lat: viewport.getSouthWest().lat(),\n        lng: viewport.getSouthWest().lng()\n      }\n    };\n    setDestination({\n      latitude: location.lat(),\n      longitude: location.lng(),\n      boundary\n    });\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: location,\n      zoom: 15\n    });\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n    const marker = new window.google.maps.Marker({\n      position: location,\n      map: map\n    });\n    markerRef.current = marker;\n    if (polygonRef.current) {\n      polygonRef.current.setMap(null);\n    }\n    const polygonCoords = [{\n      lat: boundary.northeast.lat,\n      lng: boundary.northeast.lng\n    }, {\n      lat: boundary.northeast.lat,\n      lng: boundary.southwest.lng\n    }, {\n      lat: boundary.southwest.lat,\n      lng: boundary.southwest.lng\n    }, {\n      lat: boundary.southwest.lat,\n      lng: boundary.northeast.lng\n    }];\n    const polygon = new window.google.maps.Polygon({\n      paths: polygonCoords,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35\n    });\n    polygon.setMap(map);\n    polygonRef.current = polygon;\n\n    // Fetch nearby users\n    await fetchNearbyUsers(location.lat(), location.lng(), boundary);\n  };\n  const fetchNearbyUsers = async (latitude, longitude, boundary) => {\n    try {\n      const queryParams = new URLSearchParams({\n        latitude,\n        longitude,\n        northeast: JSON.stringify(boundary.northeast),\n        southwest: JSON.stringify(boundary.southwest)\n      });\n      const response = await fetch(`http://localhost:9000/api/users/nearby?${queryParams.toString()}`);\n      const data = await response.json();\n      if (data.success) {\n        console.log('Nearby users:', data.users);\n      } else {\n        console.error('Failed to fetch nearby users');\n      }\n    } catch (error) {\n      console.error('Error fetching nearby users:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-place-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      className: \"search-place-input\",\n      placeholder: \"Search for a place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"yPgPs9/73z2s0wZHWl9qaH68SyQ=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","autocomplete","setAutocomplete","inputRef","mapRef","markerRef","polygonRef","window","google","maps","console","error","initializeAutocomplete","input","current","places","Autocomplete","setFields","addListener","onPlaceChanged","place","getPlace","geometry","location","viewport","boundary","northeast","lat","getNorthEast","lng","southwest","getSouthWest","latitude","longitude","map","Map","center","zoom","setMap","marker","Marker","position","polygonCoords","polygon","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","fetchNearbyUsers","queryParams","URLSearchParams","JSON","stringify","response","fetch","toString","data","json","success","log","users","className","children","type","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n\n    const initializeAutocomplete = () => {\n      const input = inputRef.current;\n      const autocomplete = new window.google.maps.places.Autocomplete(input);\n      autocomplete.setFields(['geometry', 'address_components']);\n      autocomplete.addListener('place_changed', () => onPlaceChanged(autocomplete));\n      setAutocomplete(autocomplete);\n    };\n\n    initializeAutocomplete();\n  }, []);\n\n  const onPlaceChanged = async (autocomplete) => {\n    const place = autocomplete.getPlace();\n\n    if (!place.geometry) {\n      console.error('Place contains no geometry');\n      return;\n    }\n\n    const location = place.geometry.location;\n    const viewport = place.geometry.viewport;\n\n    const boundary = {\n      northeast: { lat: viewport.getNorthEast().lat(), lng: viewport.getNorthEast().lng() },\n      southwest: { lat: viewport.getSouthWest().lat(), lng: viewport.getSouthWest().lng() }\n    };\n\n    setDestination({\n      latitude: location.lat(),\n      longitude: location.lng(),\n      boundary\n    });\n\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: location,\n      zoom: 15,\n    });\n\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n\n    const marker = new window.google.maps.Marker({\n      position: location,\n      map: map,\n    });\n    markerRef.current = marker;\n\n    if (polygonRef.current) {\n      polygonRef.current.setMap(null);\n    }\n\n    const polygonCoords = [\n      { lat: boundary.northeast.lat, lng: boundary.northeast.lng },\n      { lat: boundary.northeast.lat, lng: boundary.southwest.lng },\n      { lat: boundary.southwest.lat, lng: boundary.southwest.lng },\n      { lat: boundary.southwest.lat, lng: boundary.northeast.lng },\n    ];\n\n    const polygon = new window.google.maps.Polygon({\n      paths: polygonCoords,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n    });\n\n    polygon.setMap(map);\n    polygonRef.current = polygon;\n\n    // Fetch nearby users\n    await fetchNearbyUsers(location.lat(), location.lng(), boundary);\n  };\n\n  const fetchNearbyUsers = async (latitude, longitude, boundary) => {\n    try {\n      const queryParams = new URLSearchParams({\n        latitude,\n        longitude,\n        northeast: JSON.stringify(boundary.northeast),\n        southwest: JSON.stringify(boundary.southwest)\n      });\n\n      const response = await fetch(`http://localhost:9000/api/users/nearby?${queryParams.toString()}`);\n      const data = await response.json();\n      if (data.success) {\n        console.log('Nearby users:', data.users);\n      } else {\n        console.error('Failed to fetch nearby users');\n      }\n    } catch (error) {\n      console.error('Error fetching nearby users:', error);\n    }\n  };\n\n  return (\n    <div className=\"search-place-container\">\n      <input\n        type=\"text\"\n        ref={inputRef}\n        className=\"search-place-input\"\n        placeholder=\"Search for a place\"\n      />\n      <div id=\"map\" ref={mapRef} className=\"map-container\"></div>\n    </div>\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}