{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [isSignup, setIsSignup] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Login failed');\n      }\n      console.log('Login successful:', data);\n      navigate('/home');\n    } catch (error) {\n      console.error('Error during login:', error);\n      alert('Login failed. Please check your credentials and try again.');\n    }\n  };\n\n  // Function to handle signup process\n  const handleSignUp = async () => {\n    // Request permission to access user's location\n    const permission = await navigator.permissions.query({\n      name: 'geolocation'\n    });\n    if (permission.state === 'granted') {\n      // If permission granted, get current location\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        // Include latitude and longitude in signup data\n        const signupData = {\n          username: usernameValue,\n          // assuming usernameValue holds the username from the signup form\n          email: emailValue,\n          // assuming emailValue holds the email from the signup form\n          password: passwordValue,\n          // assuming passwordValue holds the password from the signup form\n          latitude,\n          // assuming latitude holds the user's current latitude\n          longitude // assuming longitude holds the user's current longitude\n        };\n        // Send signup data to backend\n        const response = await fetch('/api/users/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(signupData)\n        });\n        // Handle response from backend\n        const data = await response.json();\n        console.log('Signup response:', data);\n      }, error => {\n        console.error('Error getting location:', error);\n        // Handle error (e.g., show error message to user)\n      });\n    } else {\n      // Handle case where user denies location permission\n      console.log('Location permission denied');\n      // Provide alternative means for user to input location (e.g., manual input)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-header\",\n      children: isSignup ? 'Sign Up' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), isSignup && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"login-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"login-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"login-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button\",\n      onClick: isSignup ? handleSignUp : handleLogin,\n      children: isSignup ? 'Sign Up' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => setIsSignup(!isSignup),\n      children: isSignup ? 'Have an account? Login' : 'Don\\'t have an account? Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"RnISwADB8u0yItYchK5LIdLztuQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","username","setUsername","isSignup","setIsSignup","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","success","Error","error","console","log","alert","handleSignUp","permission","navigator","permissions","query","name","state","geolocation","getCurrentPosition","position","latitude","longitude","coords","signupData","usernameValue","emailValue","passwordValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/login.css';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [isSignup, setIsSignup] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      console.log('Login successful:', data);\n      navigate('/home');\n    } catch (error) {\n      console.error('Error during login:', error);\n      alert('Login failed. Please check your credentials and try again.');\n    }\n  };\n\n  \n  // Function to handle signup process\nconst handleSignUp = async () => {\n  // Request permission to access user's location\n  const permission = await navigator.permissions.query({ name: 'geolocation' });\n  if (permission.state === 'granted') {\n      // If permission granted, get current location\n      navigator.geolocation.getCurrentPosition(async (position) => {\n          const { latitude, longitude } = position.coords;\n          // Include latitude and longitude in signup data\n          const signupData = {\n            username: usernameValue, // assuming usernameValue holds the username from the signup form\n            email: emailValue, // assuming emailValue holds the email from the signup form\n            password: passwordValue, // assuming passwordValue holds the password from the signup form\n            latitude, // assuming latitude holds the user's current latitude\n            longitude // assuming longitude holds the user's current longitude\n        };\n          // Send signup data to backend\n          const response = await fetch('/api/users/register', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(signupData)\n          });\n          // Handle response from backend\n          const data = await response.json();\n          console.log('Signup response:', data);\n      }, (error) => {\n          console.error('Error getting location:', error);\n          // Handle error (e.g., show error message to user)\n      });\n  } else {\n      // Handle case where user denies location permission\n      console.log('Location permission denied');\n      // Provide alternative means for user to input location (e.g., manual input)\n  }\n};\n\n\n  return (\n    <div className=\"login-container\">\n      <h2 className=\"login-header\">{isSignup ? 'Sign Up' : 'Login'}</h2>\n      {isSignup && (\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"login-input\"\n        />\n      )}\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        className=\"login-input\"\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        className=\"login-input\"\n      />\n      <button className=\"login-button\" onClick={isSignup ? handleSignUp : handleLogin}>\n        {isSignup ? 'Sign Up' : 'Login'}\n      </button>\n      <button className=\"toggle-button\" onClick={() => setIsSignup(!isSignup)}>\n        {isSignup ? 'Have an account? Login' : 'Don\\'t have an account? Sign Up'}\n      </button>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}