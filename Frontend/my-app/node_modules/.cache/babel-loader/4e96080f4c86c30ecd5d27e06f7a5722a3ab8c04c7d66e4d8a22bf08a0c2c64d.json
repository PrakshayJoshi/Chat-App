{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\n/* global google */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const navigate = useNavigate();\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n    try {\n      const {\n        latitude,\n        longitude\n      } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitude,\n          longitude\n        })\n      });\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          setUser({\n            id: data.user.id,\n            username: data.user.username\n          });\n          localStorage.setItem('userId', data.user.id);\n          setUserState({\n            id: data.user.id,\n            username: data.user.username\n          });\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        }\n      }).catch(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        navigate('/login');\n      });\n    }\n  }, [navigate, setUser]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        }, error => reject(error));\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination\n        };\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n        }\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user && user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"home-header\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInputComponent, {\n      message: message,\n      setMessage: setMessage,\n      handleKeyDown: handleKeyDown,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchPlaceComponent, {\n      setDestination: setDestination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButtonComponent, {\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageListComponent, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"mSsMOk4NLCu+XOYG9093lH5Sgwk=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useUser","useNavigate","MessageInputComponent","SearchPlaceComponent","MessageListComponent","LogoutButtonComponent","jsxDEV","_jsxDEV","HomePage","_s","setUser","user","setUserState","message","setMessage","messages","setMessages","loading","setLoading","error","setError","destination","setDestination","navigate","updateLocation","userId","localStorage","getItem","console","latitude","longitude","getCurrentLocation","log","response","fetch","method","headers","body","JSON","stringify","ok","token","then","json","data","success","id","username","setItem","removeItem","catch","fetchMessages","forEach","msg","index","location","intervalId","setInterval","clearInterval","Error","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","handleKeyDown","event","key","sendMessage","trim","messageObject","text","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["/* global google */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent.jsx';\n\nconst HomePage = () => {\n  const { setUser } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const navigate = useNavigate();\n\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n\n    try {\n      const { latitude, longitude } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ latitude, longitude }),\n      });\n\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            setUser({ id: data.user.id, username: data.user.username });\n            localStorage.setItem('userId', data.user.id);\n            setUserState({ id: data.user.id, username: data.user.username });\n            setLoading(false);\n          } else {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userId');\n            navigate('/login');\n          }\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        });\n    }\n  }, [navigate, setUser]);\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n            });\n          },\n          (error) => reject(error)\n        );\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  const handleKeyDown = async (event) => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination\n        };\n\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageObject),\n        });\n\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n        }\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Welcome {user && user.username}</h1>\n      <h2 className=\"home-header\">Home Page</h2>\n      <MessageInputComponent\n        message={message}\n        setMessage={setMessage}\n        handleKeyDown={handleKeyDown}\n        sendMessage={sendMessage}\n      />\n      <SearchPlaceComponent setDestination={setDestination} />\n      <LogoutButtonComponent handleLogout={handleLogout} />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <MessageListComponent messages={messages} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}