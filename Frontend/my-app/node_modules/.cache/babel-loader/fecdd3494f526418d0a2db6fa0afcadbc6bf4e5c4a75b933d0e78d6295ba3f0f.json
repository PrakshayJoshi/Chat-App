{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/contexts/UserContext.jsx\",\n  _s = $RefreshSig$();\n// UserContext.jsx\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginUser, signupUser, updateLocation } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    try {\n      const response = await loginUser({\n        email,\n        password\n      });\n      setUser(response.user);\n      return true;\n    } catch (error) {\n      console.error('Login failed:', error);\n      return false;\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await signupUser(userData);\n      return true;\n    } catch (error) {\n      console.error('Signup failed:', error);\n      return false;\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      const interval = setInterval(() => {\n        // Update user location every 30 seconds\n        navigator.geolocation.getCurrentPosition(({\n          coords\n        }) => {\n          updateLocation(user._id, {\n            latitude: coords.latitude,\n            longitude: coords.longitude\n          });\n        });\n      }, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      signup\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","loginUser","signupUser","updateLocation","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","login","email","password","response","error","console","signup","userData","interval","setInterval","navigator","geolocation","getCurrentPosition","coords","_id","latitude","longitude","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/contexts/UserContext.jsx"],"sourcesContent":["// UserContext.jsx\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginUser, signupUser, updateLocation } from '../api';\n\nexport const UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async (email, password) => {\n    try {\n      const response = await loginUser({ email, password });\n      setUser(response.user);\n      return true;\n    } catch (error) {\n      console.error('Login failed:', error);\n      return false;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const response = await signupUser(userData);\n      return true;\n    } catch (error) {\n      console.error('Signup failed:', error);\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      const interval = setInterval(() => {\n        // Update user location every 30 seconds\n        navigator.geolocation.getCurrentPosition(({ coords }) => {\n          updateLocation(user._id, {\n            latitude: coords.latitude,\n            longitude: coords.longitude,\n          });\n        });\n      }, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n\n  return (\n    <UserContext.Provider value={{ user, login, signup }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,EAAEC,UAAU,EAAEC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,SAAS,CAAC;QAAEY,KAAK;QAAEC;MAAS,CAAC,CAAC;MACrDH,OAAO,CAACI,QAAQ,CAACL,IAAI,CAAC;MACtB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAME,MAAM,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMb,UAAU,CAACiB,QAAQ,CAAC;MAC3C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO,KAAK;IACd;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIU,IAAI,EAAE;MACR,MAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC;QACAC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,CAAC;UAAEC;QAAO,CAAC,KAAK;UACvDtB,cAAc,CAACO,IAAI,CAACgB,GAAG,EAAE;YACvBC,QAAQ,EAAEF,MAAM,CAACE,QAAQ;YACzBC,SAAS,EAAEH,MAAM,CAACG;UACpB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,EAAE,KAAK,CAAC;MACT,OAAO,MAAMC,aAAa,CAACT,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEE,KAAK;MAAEM;IAAO,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CA5CIF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}