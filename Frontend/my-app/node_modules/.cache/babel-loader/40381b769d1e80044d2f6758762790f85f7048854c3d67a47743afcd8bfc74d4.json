{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const searchInputRef = useRef(null);\n  useEffect(() => {\n    const loader = new window.google.maps.places.Autocomplete(searchInputRef.current);\n    loader.addListener('place_changed', () => {\n      const place = loader.getPlace();\n      if (place.geometry) {\n        setDestination({\n          name: place.name,\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        });\n      }\n    });\n  }, [setDestination]);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: searchInputRef,\n    type: \"text\",\n    placeholder: \"Search for a place\",\n    className: \"search-input\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"G1SYZ8bsOQ5xM7oTDj/ahiJW0QY=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","searchInputRef","loader","window","google","maps","places","Autocomplete","current","addListener","place","getPlace","geometry","name","latitude","location","lat","longitude","lng","ref","type","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const searchInputRef = useRef(null);\n\n  useEffect(() => {\n    const loader = new window.google.maps.places.Autocomplete(searchInputRef.current);\n    loader.addListener('place_changed', () => {\n      const place = loader.getPlace();\n      if (place.geometry) {\n        setDestination({\n          name: place.name,\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng(),\n        });\n      }\n    });\n  }, [setDestination]);\n\n  return (\n    <input\n      ref={searchInputRef}\n      type=\"text\"\n      placeholder=\"Search for a place\"\n      className=\"search-input\"\n    />\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,cAAc,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACN,cAAc,CAACO,OAAO,CAAC;IACjFN,MAAM,CAACO,WAAW,CAAC,eAAe,EAAE,MAAM;MACxC,MAAMC,KAAK,GAAGR,MAAM,CAACS,QAAQ,CAAC,CAAC;MAC/B,IAAID,KAAK,CAACE,QAAQ,EAAE;QAClBb,cAAc,CAAC;UACbc,IAAI,EAAEH,KAAK,CAACG,IAAI;UAChBC,QAAQ,EAAEJ,KAAK,CAACE,QAAQ,CAACG,QAAQ,CAACC,GAAG,CAAC,CAAC;UACvCC,SAAS,EAAEP,KAAK,CAACE,QAAQ,CAACG,QAAQ,CAACG,GAAG,CAAC;QACzC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnB,cAAc,CAAC,CAAC;EAEpB,oBACEF,OAAA;IACEsB,GAAG,EAAElB,cAAe;IACpBmB,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,oBAAoB;IAChCC,SAAS,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEN,CAAC;AAAC1B,EAAA,CAzBIF,oBAAoB;AAAA6B,EAAA,GAApB7B,oBAAoB;AA2B1B,eAAeA,oBAAoB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}