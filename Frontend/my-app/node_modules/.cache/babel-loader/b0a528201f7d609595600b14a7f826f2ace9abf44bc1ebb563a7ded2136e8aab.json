{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\n// Inside HomePage component\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data.reverse());\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        setIsTyping(false); // Disable typing\n        const location = await getCurrentLocation();\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: message,\n            location\n          })\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n        }\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const getCurrentLocation = () => {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        resolve({\n          latitude,\n          longitude\n        });\n      }, error => {\n        console.error('Error getting location:', error);\n        reject(error);\n      });\n    });\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter' && !isTyping) {\n      setIsTyping(true); // Enable typing\n      await sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), msg.location ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", msg.location.latitude, \", \", msg.location.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Location not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"8jLSxUOdUYsMhbBLYcQsUo09mhY=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","messages","setMessages","loading","setLoading","error","setError","isTyping","setIsTyping","fetchMessages","response","fetch","ok","Error","data","json","reverse","console","sendMessage","trim","location","getCurrentLocation","method","headers","body","JSON","stringify","text","log","success","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","handleKeyDown","event","key","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyDown","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["// Inside HomePage component\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\n\nconst HomePage = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [isTyping, setIsTyping] = useState(false);\n\n    useEffect(() => {\n        fetchMessages();\n    }, []);\n\n    const fetchMessages = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/api/messages');\n            if (!response.ok) {\n                throw new Error('Failed to fetch messages');\n            }\n            const data = await response.json();\n            setMessages(data.reverse());\n            setLoading(false);\n        } catch (error) {\n            console.error('Failed to fetch messages:', error);\n            setError(error.message);\n            setLoading(false);\n        }\n    };\n\n    const sendMessage = async () => {\n        if (message.trim() !== '') {\n            try {\n                setIsTyping(false); // Disable typing\n                const location = await getCurrentLocation();\n                const response = await fetch('http://localhost:9000/api/messages/send', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ text: message, location })\n                });\n                const data = await response.json();\n                console.log('Success:', data);\n                if (data.success) {\n                    setMessages([data.message, ...messages]);\n                }\n                setMessage('');\n            } catch (error) {\n                console.error('Error sending message:', error);\n            }\n        }\n    };\n\n    const getCurrentLocation = () => {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    resolve({ latitude, longitude });\n                },\n                (error) => {\n                    console.error('Error getting location:', error);\n                    reject(error);\n                }\n            );\n        });\n    };\n\n    const handleKeyDown = async (event) => {\n        if (event.key === 'Enter' && !isTyping) {\n            setIsTyping(true); // Enable typing\n            await sendMessage();\n        }\n    };\n\n    return (\n        <div>\n            <h2>Home Page</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    onKeyDown={handleKeyDown}\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n            <div>\n                {loading ? (\n                    <p>Loading...</p>\n                ) : error ? (\n                    <p>Error: {error}</p>\n                ) : (\n                    messages.map((msg, index) => (\n                        <div key={index}>\n                            <p>{msg.text}</p>\n                            {msg.location ? (\n                                <p>Location: {msg.location.latitude}, {msg.location.longitude}</p>\n                            ) : (\n                                <p>Location not available</p>\n                            )}\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}