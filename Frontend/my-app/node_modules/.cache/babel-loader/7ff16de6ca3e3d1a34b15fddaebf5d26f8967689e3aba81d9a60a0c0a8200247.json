{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    // Log location data for each message\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]); // Run this effect whenever messages change\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data.reverse());\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            type: 'Point',\n            coordinates: [position.coords.latitude, position.coords.longitude]\n          });\n        }, error => {\n          reject(error);\n        });\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        // Get the user's current location\n        const location = await getCurrentLocation();\n\n        // Construct the message object with text and location\n        const messageObject = {\n          text: message,\n          location: location\n        };\n\n        // Send the message to the backend\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n        }\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), msg.location && msg.location.latitude && msg.location.longitude && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", msg.location.latitude, \", \", msg.location.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"TbG/0ynYeT3oTpcoPfL6+AU713Y=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","messages","setMessages","loading","setLoading","error","setError","fetchMessages","forEach","msg","index","console","log","location","response","fetch","ok","Error","data","json","reverse","handleKeyDown","event","key","sendMessage","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","type","coordinates","coords","latitude","longitude","trim","messageObject","text","method","headers","body","JSON","stringify","success","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onKeyDown","onClick","map","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\n\nconst HomePage = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchMessages();\n    }, []);\n\n    useEffect(() => {\n        // Log location data for each message\n        messages.forEach((msg, index) => {\n            console.log(`Message ${index} Location:`, msg.location);\n        });\n    }, [messages]); // Run this effect whenever messages change\n\n    const fetchMessages = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/api/messages');\n            if (!response.ok) {\n                throw new Error('Failed to fetch messages');\n            }\n            const data = await response.json();\n            setMessages(data.reverse());\n            setLoading(false);\n        } catch (error) {\n            console.error('Failed to fetch messages:', error);\n            setError(error.message);\n            setLoading(false);\n        }\n    };\n\n    const handleKeyDown = async (event) => {\n        if (event.key === 'Enter') {\n            await sendMessage();\n        }\n    };\n\n    const getCurrentLocation = async () => {\n        return new Promise((resolve, reject) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        resolve({\n                            type: 'Point',\n                            coordinates: [position.coords.latitude, position.coords.longitude]\n                        });\n                    },\n                    (error) => {\n                        reject(error);\n                    }\n                );\n            } else {\n                reject(new Error('Geolocation is not supported by this browser.'));\n            }\n        });\n    };\n    \n\n    const sendMessage = async () => {\n        if (message.trim() !== '') {\n            try {\n                // Get the user's current location\n                const location = await getCurrentLocation();\n                \n                // Construct the message object with text and location\n                const messageObject = {\n                    text: message,\n                    location: location\n                };\n    \n                // Send the message to the backend\n                const response = await fetch('http://localhost:9000/api/messages/send', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(messageObject)\n                });\n    \n                const data = await response.json();\n                console.log('Success:', data);\n                if (data.success) {\n                    setMessages([data.message, ...messages]);\n                }\n                setMessage('');\n            } catch (error) {\n                console.error('Error sending message:', error);\n            }\n        }\n    };\n    \n\n    return (\n        <div>\n            <h2>Home Page</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    onKeyDown={handleKeyDown}\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n            <div>\n                {loading ? (\n                    <p>Loading...</p>\n                ) : error ? (\n                    <p>Error: {error}</p>\n                ) : (\n                    messages.map((msg, index) => (\n                        <div key={index}>\n                        <p>{msg.text}</p>\n                        {/* Rendering location */}\n                        {msg.location && msg.location.latitude && msg.location.longitude && (\n                            <p>Location: {msg.location.latitude}, {msg.location.longitude}</p>\n                        )}\n                    </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}