{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data.reverse());\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        // Request user's location\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n\n          // Format location data\n          const location = {\n            type: 'Point',\n            coordinates: [longitude, latitude] // Note the order: [longitude, latitude]\n          };\n\n          // Send message along with location to backend\n          const response = await fetch('http://localhost:9000/api/messages/send', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              text: message,\n              location\n            })\n          });\n          const data = await response.json();\n          console.log('Success:', data);\n          if (data.success) {\n            // Update messages state with new message\n            setMessages([...messages, data.message]);\n          }\n          setMessage('');\n        }, error => {\n          console.error('Error getting location:', error);\n        });\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n    const response = await fetch('http://localhost:9000/api/messages/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: message,\n        location\n      })\n    });\n    const data = await response.json();\n    console.log('Success:', data);\n    if (data.success) {\n      // Update messages state with new message at the beginning of the array\n      setMessages([data.message, ...messages]);\n    }\n    setMessage('');\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), msg.location ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", msg.location.latitude, \", \", msg.location.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Location not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"3c1El1mBUVfTpXC8Qv+7ssI5xLY=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","messages","setMessages","loading","setLoading","error","setError","fetchMessages","response","fetch","ok","Error","data","json","reverse","console","sendMessage","trim","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","location","type","coordinates","method","headers","body","JSON","stringify","text","log","success","handleKeyDown","event","key","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onKeyDown","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\n\nconst HomePage = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n  \n    \n    useEffect(() => {\n        fetchMessages();\n    }, []);\n\n    const fetchMessages = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/api/messages');\n            if (!response.ok) {\n                throw new Error('Failed to fetch messages');\n            }\n            const data = await response.json();\n            setMessages(data.reverse());\n            setLoading(false);\n        } catch (error) {\n            console.error('Failed to fetch messages:', error);\n            setError(error.message);\n            setLoading(false);\n        }\n    };\n\n    const sendMessage = async () => {\n        if (message.trim() !== '') {\n            try {\n                // Request user's location\n                navigator.geolocation.getCurrentPosition(async (position) => {\n                    const { latitude, longitude } = position.coords;\n                    \n                    // Format location data\n                    const location = {\n                        type: 'Point',\n                        coordinates: [longitude, latitude] // Note the order: [longitude, latitude]\n                    };\n    \n                    // Send message along with location to backend\n                    const response = await fetch('http://localhost:9000/api/messages/send', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({ text: message, location })\n                    });\n                    const data = await response.json();\n                    console.log('Success:', data);\n                    if (data.success) {\n                        // Update messages state with new message\n                        setMessages([...messages, data.message]);\n                    }\n                    setMessage('');\n                }, (error) => {\n                    console.error('Error getting location:', error);\n                });\n            } catch (error) {\n                console.error('Error sending message:', error);\n            }\n        }\n\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ text: message, location })\n});\n\nconst data = await response.json();\nconsole.log('Success:', data);\nif (data.success) {\n    // Update messages state with new message at the beginning of the array\n    setMessages([data.message, ...messages]);\n}\nsetMessage('');\n    };\n    \n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            sendMessage();\n        }\n    };\n\n    return (\n        <div>\n            <h2>Home Page</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    onKeyDown={handleKeyDown}\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n            <div>\n                {loading ? (\n                    <p>Loading...</p>\n                ) : error ? (\n                    <p>Error: {error}</p>\n                ) : (\n                    messages.map((msg, index) => (\n                        <div key={index}>\n                            <p>{msg.text}</p>\n                            {msg.location ? (\n                                <p>Location: {msg.location.latitude}, {msg.location.longitude}</p>\n                            ) : (\n                                <p>Location not available</p>\n                            )}\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}