{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const navigate = useNavigate();\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n  const [editingMessage, setEditingMessage] = useState(null);\n  const socket = io('http://localhost:9000'); // Initialize socket.io-client\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to the Socket.io server');\n    });\n    socket.on('newMessage', message => {\n      setMessages(prevMessages => [message, ...prevMessages]);\n    });\n    return () => {\n      socket.off('newMessage');\n    };\n  }, [socket]);\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n    try {\n      const {\n        latitude,\n        longitude\n      } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitude,\n          longitude\n        })\n      });\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          setUser({\n            id: data.user.id,\n            username: data.user.username\n          });\n          localStorage.setItem('userId', data.user.id);\n          setUserState({\n            id: data.user.id,\n            username: data.user.username\n          });\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        }\n      }).catch(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        navigate('/login');\n      });\n    }\n  }, [navigate, setUser]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        }, error => reject(error));\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n  const fetchNearbyUsers = async () => {\n    if (!destination) return;\n    try {\n      const {\n        latitude,\n        longitude,\n        boundary\n      } = destination;\n      const queryParams = new URLSearchParams({\n        latitude,\n        longitude,\n        northeast: JSON.stringify(boundary.northeast),\n        southwest: JSON.stringify(boundary.southwest)\n      });\n      const response = await fetch(`http://localhost:9000/api/users/nearby?${queryParams.toString()}`);\n      const data = await response.json();\n      if (data.success) {\n        setNearbyUsers(data.users);\n      } else {\n        console.error('Failed to fetch nearby users');\n      }\n    } catch (error) {\n      console.error('Error fetching nearby users:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination,\n          boundary: destination ? {\n            // Add boundary information\n            type: 'rectangle',\n            coordinates: destination.boundary // Using the destination's boundary\n          } : null,\n          createdAt: createdAt,\n          userId: user.id\n        };\n\n        // Fetch nearby users within the boundary before sending the message\n        await fetchNearbyUsers();\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null); // Clear the destination after sending the message\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = ''; // Clear the search box\n          }\n\n          // Notify nearby users via Socket.io\n          socket.emit('newMessage', {\n            message: data.message,\n            nearbyUsers: nearbyUsers\n          });\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const startEditMessage = message => {\n    setEditingMessage(message);\n  };\n  const cancelEditMessage = () => {\n    setEditingMessage(null);\n  };\n  const saveEditMessage = async updatedMessage => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages/${updatedMessage._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: updatedMessage.text\n        })\n      });\n      if (response.ok) {\n        const updatedMessages = messages.map(msg => msg._id === updatedMessage._id ? {\n          ...msg,\n          text: updatedMessage.text\n        } : msg);\n        setMessages(updatedMessages);\n        setEditingMessage(null);\n      } else {\n        console.error('Failed to update message');\n      }\n    } catch (error) {\n      console.error('Error updating message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(LogoutButtonComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(MessageInputComponent, {\n        message: message,\n        setMessage: setMessage,\n        handleKeyDown: handleKeyDown,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPlaceComponent, {\n        setDestination: setDestination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MessageListComponent, {\n      messages: messages,\n      startEditMessage: startEditMessage,\n      cancelEditMessage: cancelEditMessage,\n      saveEditMessage: saveEditMessage,\n      editingMessage: editingMessage,\n      setEditingMessage: setEditingMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"HTPpOsZuYITjgSfYsIq5NkVlLm8=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useUser","useNavigate","MessageInputComponent","SearchPlaceComponent","MessageListComponent","LogoutButtonComponent","io","jsxDEV","_jsxDEV","HomePage","_s","setUser","user","setUserState","message","setMessage","messages","setMessages","loading","setLoading","error","setError","destination","setDestination","navigate","nearbyUsers","setNearbyUsers","editingMessage","setEditingMessage","socket","on","console","log","prevMessages","off","updateLocation","userId","localStorage","getItem","latitude","longitude","getCurrentLocation","response","fetch","method","headers","body","JSON","stringify","ok","token","then","json","data","success","id","username","setItem","removeItem","catch","fetchMessages","forEach","msg","index","location","intervalId","setInterval","clearInterval","Error","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","handleKeyDown","event","key","sendMessage","fetchNearbyUsers","boundary","queryParams","URLSearchParams","northeast","southwest","toString","users","trim","createdAt","Date","toISOString","messageObject","text","type","coordinates","searchBox","document","querySelector","value","emit","startEditMessage","cancelEditMessage","saveEditMessage","updatedMessage","_id","updatedMessages","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport io from 'socket.io-client';\n\nconst HomePage = () => {\n  const { setUser } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const navigate = useNavigate();\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n  const [editingMessage, setEditingMessage] = useState(null);\n\n  const socket = io('http://localhost:9000'); // Initialize socket.io-client\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to the Socket.io server');\n    });\n\n    socket.on('newMessage', (message) => {\n      setMessages((prevMessages) => [message, ...prevMessages]);\n    });\n\n    return () => {\n      socket.off('newMessage');\n    };\n  }, [socket]);\n\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n\n    try {\n      const { latitude, longitude } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ latitude, longitude }),\n      });\n\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            setUser({ id: data.user.id, username: data.user.username });\n            localStorage.setItem('userId', data.user.id);\n            setUserState({ id: data.user.id, username: data.user.username });\n            setLoading(false);\n          } else {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userId');\n            navigate('/login');\n          }\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        });\n    }\n  }, [navigate, setUser]);\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n            });\n          },\n          (error) => reject(error)\n        );\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  const handleKeyDown = async (event) => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n\n  const fetchNearbyUsers = async () => {\n    if (!destination) return;\n\n    try {\n      const { latitude, longitude, boundary } = destination;\n      const queryParams = new URLSearchParams({\n        latitude,\n        longitude,\n        northeast: JSON.stringify(boundary.northeast),\n        southwest: JSON.stringify(boundary.southwest)\n      });\n\n      const response = await fetch(`http://localhost:9000/api/users/nearby?${queryParams.toString()}`);\n      const data = await response.json();\n      if (data.success) {\n        setNearbyUsers(data.users);\n      } else {\n        console.error('Failed to fetch nearby users');\n      }\n    } catch (error) {\n      console.error('Error fetching nearby users:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination,\n          boundary: destination ? { // Add boundary information\n            type: 'rectangle',\n            coordinates: destination.boundary // Using the destination's boundary\n          } : null,\n          createdAt: createdAt,\n          userId: user.id\n        };\n\n        // Fetch nearby users within the boundary before sending the message\n        await fetchNearbyUsers();\n\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageObject),\n        });\n\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null); // Clear the destination after sending the message\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = ''; // Clear the search box\n          }\n\n          // Notify nearby users via Socket.io\n          socket.emit('newMessage', { message: data.message, nearbyUsers: nearbyUsers });\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const startEditMessage = (message) => {\n    setEditingMessage(message);\n  };\n\n  const cancelEditMessage = () => {\n    setEditingMessage(null);\n  };\n\n  const saveEditMessage = async (updatedMessage) => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages/${updatedMessage._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: updatedMessage.text }),\n      });\n\n      if (response.ok) {\n        const updatedMessages = messages.map((msg) =>\n          msg._id === updatedMessage._id ? { ...msg, text: updatedMessage.text } : msg\n        );\n        setMessages(updatedMessages);\n        setEditingMessage(null);\n      } else {\n        console.error('Failed to update message');\n      }\n    } catch (error) {\n      console.error('Error updating message:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <LogoutButtonComponent />\n      <div className=\"input-container\">\n        <MessageInputComponent\n          message={message}\n          setMessage={setMessage}\n          handleKeyDown={handleKeyDown}\n          sendMessage={sendMessage}\n        />\n        <SearchPlaceComponent setDestination={setDestination} />\n      </div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <MessageListComponent\n          messages={messages}\n          startEditMessage={startEditMessage}\n          cancelEditMessage={cancelEditMessage}\n          saveEditMessage={saveEditMessage}\n          editingMessage={editingMessage}\n          setEditingMessage={setEditingMessage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}