{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n    const initializeAutocomplete = () => {\n      const input = inputRef.current;\n      const autocomplete = new window.google.maps.places.Autocomplete(input);\n      autocomplete.setFields(['geometry', 'address_components', 'place_id']); // Include place_id\n      autocomplete.addListener('place_changed', () => onPlaceChanged(autocomplete));\n      setAutocomplete(autocomplete);\n    };\n    initializeAutocomplete();\n  }, []);\n  const fetchPlaceDetails = async placeId => {\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&key=YOUR_API_KEY`);\n      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.error('Error fetching place details:', error);\n      return null;\n    }\n  };\n  const onPlaceChanged = async autocomplete => {\n    const place = autocomplete.getPlace();\n    if (!place.geometry) {\n      console.error('Place contains no geometry');\n      return;\n    }\n    const location = place.geometry.location;\n    const placeId = place.place_id;\n    const placeDetails = await fetchPlaceDetails(placeId);\n    const radius = placeDetails.geometry.viewport ? calculateRadius(placeDetails.geometry.viewport) : 1000;\n    setDestination({\n      latitude: location.lat(),\n      longitude: location.lng(),\n      radius: radius,\n      viewport: {\n        north: place.geometry.viewport.getNorthEast().lat(),\n        east: place.geometry.viewport.getNorthEast().lng(),\n        south: place.geometry.viewport.getSouthWest().lat(),\n        west: place.geometry.viewport.getSouthWest().lng()\n      }\n    });\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: location,\n      zoom: 15\n    });\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n    const marker = new window.google.maps.Marker({\n      position: location,\n      map: map\n    });\n    markerRef.current = marker;\n    if (polygonRef.current) {\n      polygonRef.current.setMap(null);\n    }\n    const circle = new window.google.maps.Circle({\n      center: location,\n      radius: radius,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35\n    });\n    circle.setMap(map);\n    polygonRef.current = circle;\n  };\n  const calculateRadius = viewport => {\n    const ne = viewport.getNorthEast();\n    const sw = viewport.getSouthWest();\n    const latDiff = ne.lat() - sw.lat();\n    const lngDiff = ne.lng() - sw.lng();\n    return Math.sqrt(Math.pow(latDiff, 2) + Math.pow(lngDiff, 2)) * 111000 / 2; // approximate conversion to meters\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-place-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      className: \"search-place-input\",\n      placeholder: \"Search for a place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"yPgPs9/73z2s0wZHWl9qaH68SyQ=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","autocomplete","setAutocomplete","inputRef","mapRef","markerRef","polygonRef","window","google","maps","console","error","initializeAutocomplete","input","current","places","Autocomplete","setFields","addListener","onPlaceChanged","fetchPlaceDetails","placeId","response","fetch","data","json","result","place","getPlace","geometry","location","place_id","placeDetails","radius","viewport","calculateRadius","latitude","lat","longitude","lng","north","getNorthEast","east","south","getSouthWest","west","map","Map","center","zoom","setMap","marker","Marker","position","circle","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","ne","sw","latDiff","lngDiff","Math","sqrt","pow","className","children","type","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n\n    const initializeAutocomplete = () => {\n      const input = inputRef.current;\n      const autocomplete = new window.google.maps.places.Autocomplete(input);\n      autocomplete.setFields(['geometry', 'address_components', 'place_id']); // Include place_id\n      autocomplete.addListener('place_changed', () => onPlaceChanged(autocomplete));\n      setAutocomplete(autocomplete);\n    };\n\n    initializeAutocomplete();\n  }, []);\n\n  const fetchPlaceDetails = async (placeId) => {\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&key=YOUR_API_KEY`);\n      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.error('Error fetching place details:', error);\n      return null;\n    }\n  };\n\n  const onPlaceChanged = async (autocomplete) => {\n    const place = autocomplete.getPlace();\n\n    if (!place.geometry) {\n      console.error('Place contains no geometry');\n      return;\n    }\n\n    const location = place.geometry.location;\n    const placeId = place.place_id;\n\n    const placeDetails = await fetchPlaceDetails(placeId);\n    const radius = placeDetails.geometry.viewport\n      ? calculateRadius(placeDetails.geometry.viewport)\n      : 1000;\n\n    setDestination({\n      latitude: location.lat(),\n      longitude: location.lng(),\n      radius: radius,\n      viewport: {\n        north: place.geometry.viewport.getNorthEast().lat(),\n        east: place.geometry.viewport.getNorthEast().lng(),\n        south: place.geometry.viewport.getSouthWest().lat(),\n        west: place.geometry.viewport.getSouthWest().lng(),\n      },\n    });\n\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: location,\n      zoom: 15,\n    });\n\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n\n    const marker = new window.google.maps.Marker({\n      position: location,\n      map: map,\n    });\n    markerRef.current = marker;\n\n    if (polygonRef.current) {\n      polygonRef.current.setMap(null);\n    }\n\n    const circle = new window.google.maps.Circle({\n      center: location,\n      radius: radius,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n    });\n\n    circle.setMap(map);\n    polygonRef.current = circle;\n  };\n\n  const calculateRadius = (viewport) => {\n    const ne = viewport.getNorthEast();\n    const sw = viewport.getSouthWest();\n    const latDiff = ne.lat() - sw.lat();\n    const lngDiff = ne.lng() - sw.lng();\n    return Math.sqrt(Math.pow(latDiff, 2) + Math.pow(lngDiff, 2)) * 111000 / 2; // approximate conversion to meters\n  };\n\n  return (\n    <div className=\"search-place-container\">\n      <input\n        type=\"text\"\n        ref={inputRef}\n        className=\"search-place-input\"\n        placeholder=\"Search for a place\"\n      />\n      <div id=\"map\" ref={mapRef} className=\"map-container\"></div>\n    </div>\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}