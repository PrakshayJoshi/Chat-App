{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/home.css';\nimport { useUser } from '../contexts/UserContext'; // Assuming you have a UserContext to provide the logged-in user's info\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useUser(); // Get the current logged-in user\n\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(updateLocation, 30000); // Update location every 30 seconds\n    return () => clearInterval(interval); // Clear interval on component unmount\n  }, [user, updateLocation]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data.reverse());\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            type: 'Point',\n            coordinates: [position.coords.longitude, position.coords.latitude] // Note: Longitude comes first\n          });\n        }, error => {\n          reject(error);\n        });\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const messageObject = {\n          text: message,\n          location: location\n        };\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n        }\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const updateLocation = useCallback(async () => {\n    if (user) {\n      try {\n        const location = await getCurrentLocation();\n        const response = await fetch(`http://localhost:9000/api/users/${user._id}/location`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            latitude: location.coordinates[1],\n            longitude: location.coordinates[0]\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          console.log('Location updated in database'); // Console log for update\n        } else {\n          console.error('Failed to update location:', data.error);\n        }\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"home-header\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), msg.location && msg.location.coordinates && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-location\",\n          children: [\"Location: \", msg.location.coordinates[1], \", \", msg.location.coordinates[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"DZTs2ode1XN5zTNPb1oc9fogIWE=\", false, function () {\n  return [useUser];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useUser","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","messages","setMessages","loading","setLoading","error","setError","user","fetchMessages","interval","setInterval","updateLocation","clearInterval","response","fetch","ok","Error","data","json","reverse","console","handleKeyDown","event","key","sendMessage","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","type","coordinates","coords","longitude","latitude","trim","location","messageObject","text","method","headers","body","JSON","stringify","log","success","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onKeyDown","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/home.css';\nimport { useUser } from '../contexts/UserContext'; // Assuming you have a UserContext to provide the logged-in user's info\n\nconst HomePage = () => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { user } = useUser(); // Get the current logged-in user\n\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(updateLocation, 30000); // Update location every 30 seconds\n    return () => clearInterval(interval); // Clear interval on component unmount\n  }, [user, updateLocation]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data.reverse());\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  const handleKeyDown = async (event) => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve({\n              type: 'Point',\n              coordinates: [position.coords.longitude, position.coords.latitude], // Note: Longitude comes first\n            });\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const messageObject = {\n          text: message,\n          location: location,\n        };\n\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageObject),\n        });\n\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n        }\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const updateLocation = useCallback(async () => {\n    if (user) {\n      try {\n        const location = await getCurrentLocation();\n        const response = await fetch(`http://localhost:9000/api/users/${user._id}/location`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            latitude: location.coordinates[1],\n            longitude: location.coordinates[0],\n          }),\n        });\n\n        const data = await response.json();\n        if (data.success) {\n          console.log('Location updated in database'); // Console log for update\n        } else {\n          console.error('Failed to update location:', data.error);\n        }\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    }\n  }, [user]);\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"home-header\">Home Page</h2>\n      <div className=\"message-input-container\">\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n          onKeyDown={handleKeyDown}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n\n      <div className=\"messages-container\">\n        {loading ? (\n          <p className=\"loading\">Loading...</p>\n        ) : error ? (\n          <p className=\"error\">Error: {error}</p>\n        ) : (\n          messages.map((msg, index) => (\n            <div key={index} className=\"message\">\n              <p>{msg.text}</p>\n              {msg.location && msg.location.coordinates && (\n                <p className=\"message-location\">\n                  Location: {msg.location.coordinates[1]}, {msg.location.coordinates[0]}\n                </p>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}