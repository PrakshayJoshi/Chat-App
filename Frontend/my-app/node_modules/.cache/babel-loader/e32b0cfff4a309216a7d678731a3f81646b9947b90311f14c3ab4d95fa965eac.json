{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst LocationUpdater = ({\n  userId\n}) => {\n  _s();\n  useEffect(() => {\n    const updateLocation = async () => {\n      if (!navigator.geolocation) {\n        console.error('Geolocation is not supported by this browser.');\n        return;\n      }\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              location: {\n                type: 'Point',\n                coordinates: [longitude, latitude]\n              }\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Failed to update location');\n          }\n          const data = await response.json();\n          if (data.success) {\n            console.log('Updated Location');\n          }\n        } catch (error) {\n          console.error('Error updating location:', error);\n        }\n      }, error => {\n        console.error('Error getting location:', error);\n      });\n    };\n    const intervalId = setInterval(updateLocation, 5000); // Update every 5 seconds\n\n    return () => clearInterval(intervalId);\n  }, [userId]);\n  return null;\n};\n_s(LocationUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LocationUpdater;\nexport default LocationUpdater;\nvar _c;\n$RefreshReg$(_c, \"LocationUpdater\");","map":{"version":3,"names":["useEffect","LocationUpdater","userId","_s","updateLocation","navigator","geolocation","console","error","getCurrentPosition","position","latitude","longitude","coords","response","fetch","method","headers","body","JSON","stringify","location","type","coordinates","ok","Error","data","json","success","log","intervalId","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/LocationUpdater.jsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst LocationUpdater = ({ userId }) => {\n  useEffect(() => {\n    const updateLocation = async () => {\n      if (!navigator.geolocation) {\n        console.error('Geolocation is not supported by this browser.');\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const { latitude, longitude } = position.coords;\n          try {\n            const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                location: {\n                  type: 'Point',\n                  coordinates: [longitude, latitude],\n                },\n              }),\n            });\n\n            if (!response.ok) {\n              throw new Error('Failed to update location');\n            }\n\n            const data = await response.json();\n            if (data.success) {\n              console.log('Updated Location');\n            }\n          } catch (error) {\n            console.error('Error updating location:', error);\n          }\n        },\n        (error) => {\n          console.error('Error getting location:', error);\n        }\n      );\n    };\n\n    const intervalId = setInterval(updateLocation, 5000); // Update every 5 seconds\n\n    return () => clearInterval(intervalId);\n  }, [userId]);\n\n  return null;\n};\n\nexport default LocationUpdater;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtCH,SAAS,CAAC,MAAM;IACd,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;QAC1BC,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;QAC9D;MACF;MAEAH,SAAS,CAACC,WAAW,CAACG,kBAAkB,CACtC,MAAOC,QAAQ,IAAK;QAClB,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/C,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCb,MAAO,WAAU,EAAE;YACjFc,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBC,QAAQ,EAAE;gBACRC,IAAI,EAAE,OAAO;gBACbC,WAAW,EAAE,CAACX,SAAS,EAAED,QAAQ;cACnC;YACF,CAAC;UACH,CAAC,CAAC;UAEF,IAAI,CAACG,QAAQ,CAACU,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;UAC9C;UAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;UAClC,IAAID,IAAI,CAACE,OAAO,EAAE;YAChBrB,OAAO,CAACsB,GAAG,CAAC,kBAAkB,CAAC;UACjC;QACF,CAAC,CAAC,OAAOrB,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF,CAAC,EACAA,KAAK,IAAK;QACTD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CACF,CAAC;IACH,CAAC;IAED,MAAMsB,UAAU,GAAGC,WAAW,CAAC3B,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEtD,OAAO,MAAM4B,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAAC5B,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAjDIF,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AAmDrB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}