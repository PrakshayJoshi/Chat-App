{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n    const autocompleteOptions = {\n      fields: ['geometry', 'name']\n    };\n    const autocompleteInstance = new window.google.maps.places.Autocomplete(inputRef.current, autocompleteOptions);\n    setAutocomplete(autocompleteInstance);\n    const mapInstance = new window.google.maps.Map(mapRef.current, {\n      center: {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 2\n    });\n    markerRef.current = new window.google.maps.Marker({\n      map: mapInstance\n    });\n    polygonRef.current = new window.google.maps.Polygon({\n      map: mapInstance,\n      fillColor: '#FF0000',\n      fillOpacity: 0.2,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2\n    });\n    autocompleteInstance.addListener('place_changed', () => {\n      const place = autocompleteInstance.getPlace();\n      if (place.geometry && place.geometry.location) {\n        const location = {\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        };\n        mapInstance.setCenter(place.geometry.location);\n        mapInstance.setZoom(14);\n        markerRef.current.setPosition(place.geometry.location);\n        const bounds = place.geometry.viewport;\n        if (bounds) {\n          const ne = bounds.getNorthEast();\n          const sw = bounds.getSouthWest();\n          const boundaryCoordinates = [{\n            lat: ne.lat(),\n            lng: sw.lng()\n          }, {\n            lat: ne.lat(),\n            lng: ne.lng()\n          }, {\n            lat: sw.lat(),\n            lng: ne.lng()\n          }, {\n            lat: sw.lat(),\n            lng: sw.lng()\n          }];\n          polygonRef.current.setPath(boundaryCoordinates);\n          const destinationData = {\n            location,\n            boundary: {\n              northeast: {\n                lat: ne.lat(),\n                lng: ne.lng()\n              },\n              southwest: {\n                lat: sw.lat(),\n                lng: sw.lng()\n              }\n            }\n          };\n          setDestination(destinationData);\n        }\n      }\n    });\n  }, [setDestination]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-place-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Search for a place\",\n      className: \"search-place-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"map-container\",\n      style: {\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"yPgPs9/73z2s0wZHWl9qaH68SyQ=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","autocomplete","setAutocomplete","inputRef","mapRef","markerRef","polygonRef","window","google","maps","console","error","autocompleteOptions","fields","autocompleteInstance","places","Autocomplete","current","mapInstance","Map","center","lat","lng","zoom","Marker","map","Polygon","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","addListener","place","getPlace","geometry","location","latitude","longitude","setCenter","setZoom","setPosition","bounds","viewport","ne","getNorthEast","sw","getSouthWest","boundaryCoordinates","setPath","destinationData","boundary","northeast","southwest","className","children","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","height","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n\n    const autocompleteOptions = {\n      fields: ['geometry', 'name'],\n    };\n\n    const autocompleteInstance = new window.google.maps.places.Autocomplete(\n      inputRef.current,\n      autocompleteOptions\n    );\n\n    setAutocomplete(autocompleteInstance);\n\n    const mapInstance = new window.google.maps.Map(mapRef.current, {\n      center: { lat: 0, lng: 0 },\n      zoom: 2,\n    });\n\n    markerRef.current = new window.google.maps.Marker({\n      map: mapInstance,\n    });\n\n    polygonRef.current = new window.google.maps.Polygon({\n      map: mapInstance,\n      fillColor: '#FF0000',\n      fillOpacity: 0.2,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n    });\n\n    autocompleteInstance.addListener('place_changed', () => {\n      const place = autocompleteInstance.getPlace();\n      if (place.geometry && place.geometry.location) {\n        const location = {\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng(),\n        };\n\n        mapInstance.setCenter(place.geometry.location);\n        mapInstance.setZoom(14);\n\n        markerRef.current.setPosition(place.geometry.location);\n\n        const bounds = place.geometry.viewport;\n        if (bounds) {\n          const ne = bounds.getNorthEast();\n          const sw = bounds.getSouthWest();\n\n          const boundaryCoordinates = [\n            { lat: ne.lat(), lng: sw.lng() },\n            { lat: ne.lat(), lng: ne.lng() },\n            { lat: sw.lat(), lng: ne.lng() },\n            { lat: sw.lat(), lng: sw.lng() },\n          ];\n\n          polygonRef.current.setPath(boundaryCoordinates);\n\n          const destinationData = {\n            location,\n            boundary: {\n              northeast: { lat: ne.lat(), lng: ne.lng() },\n              southwest: { lat: sw.lat(), lng: sw.lng() },\n            },\n          };\n\n          setDestination(destinationData);\n        }\n      }\n    });\n  }, [setDestination]);\n\n  return (\n    <div className=\"search-place-component\">\n      <input\n        ref={inputRef}\n        type=\"text\"\n        placeholder=\"Search for a place\"\n        className=\"search-place-input\"\n      />\n      <div ref={mapRef} className=\"map-container\" style={{ height: '400px' }}></div>\n    </div>\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}