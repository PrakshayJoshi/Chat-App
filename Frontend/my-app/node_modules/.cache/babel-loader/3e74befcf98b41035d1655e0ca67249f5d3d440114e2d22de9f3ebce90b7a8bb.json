{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport EditMessageComponent from './EditMessageComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const navigate = useNavigate();\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n  const [editingMessage, setEditingMessage] = useState(null);\n\n  // Update user's location periodically\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n    try {\n      const {\n        latitude,\n        longitude\n      } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitude,\n          longitude\n        })\n      });\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  // Fetch messages on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          setUser({\n            id: data.user.id,\n            username: data.user.username\n          });\n          localStorage.setItem('userId', data.user.id);\n          setUserState({\n            id: data.user.id,\n            username: data.user.username\n          });\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        }\n      }).catch(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        navigate('/login');\n      });\n    }\n  }, [navigate, setUser]);\n\n  // Fetch messages based on user's destination\n  const fetchMessages = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages?userId=${user.id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [user.id]);\n\n  // Effect to fetch messages when user's destination changes\n  useEffect(() => {\n    if (user && user.destination) {\n      fetchMessages();\n    }\n  }, [fetchMessages, user, user.destination]);\n\n  // Effect to update location periodically\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  // Function to get current location\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        }, error => reject(error));\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  // Function to handle sending a message\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location,\n          destination: user.destination,\n          boundary: user.destination.boundary,\n          createdAt,\n          userId: user.id\n        };\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null);\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = '';\n          }\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  // Function to handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Function to fetch nearby users\n  const fetchNearbyUsers = async () => {\n    try {\n      const {\n        latitude,\n        longitude,\n        boundary\n      } = user.destination;\n      const queryParams = new URLSearchParams({\n        latitude,\n        longitude,\n        northeast: JSON.stringify(boundary.northeast),\n        southwest: JSON.stringify(boundary.southwest)\n      });\n      const response = await fetch(`http://localhost:9000/api/users/nearby?${queryParams.toString()}`);\n      const data = await response.json();\n      if (data.success) {\n        setNearbyUsers(data.users);\n      } else {\n        console.error('Failed to fetch nearby users');\n      }\n    } catch (error) {\n      console.error('Error fetching nearby users:', error);\n    }\n  };\n\n  // Render JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user && user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"home-header\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInputComponent, {\n      message: message,\n      setMessage: setMessage,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchPlaceComponent, {\n      setDestination: setDestination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchNearbyUsers,\n      children: \"Find Nearby Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), nearbyUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nearby-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users near the destination:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nearbyUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.username\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageListComponent, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButtonComponent, {\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"WZUjEsk/c/Wk392orpr+0s0RXjQ=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useUser","useNavigate","MessageInputComponent","SearchPlaceComponent","MessageListComponent","LogoutButtonComponent","EditMessageComponent","jsxDEV","_jsxDEV","HomePage","_s","setUser","user","setUserState","message","setMessage","messages","setMessages","loading","setLoading","error","setError","destination","setDestination","navigate","nearbyUsers","setNearbyUsers","editingMessage","setEditingMessage","updateLocation","userId","localStorage","getItem","console","latitude","longitude","getCurrentLocation","log","response","fetch","method","headers","body","JSON","stringify","ok","token","Authorization","then","json","data","success","id","username","setItem","removeItem","catch","fetchMessages","Error","intervalId","setInterval","clearInterval","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","sendMessage","trim","location","createdAt","Date","toISOString","messageObject","text","boundary","searchBox","document","querySelector","value","handleLogout","fetchNearbyUsers","queryParams","URLSearchParams","northeast","southwest","toString","users","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","_id","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport EditMessageComponent from './EditMessageComponent';\n\nconst HomePage = () => {\n  const { setUser } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const navigate = useNavigate();\n  const [nearbyUsers, setNearbyUsers] = useState([]);\n  const [editingMessage, setEditingMessage] = useState(null);\n\n  // Update user's location periodically\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n\n    try {\n      const { latitude, longitude } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ latitude, longitude }),\n      });\n\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  // Fetch messages on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.success) {\n            setUser({ id: data.user.id, username: data.user.username });\n            localStorage.setItem('userId', data.user.id);\n            setUserState({ id: data.user.id, username: data.user.username });\n            setLoading(false);\n          } else {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userId');\n            navigate('/login');\n          }\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        });\n    }\n  }, [navigate, setUser]);\n\n  // Fetch messages based on user's destination\n  const fetchMessages = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages?userId=${user.id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [user.id]);\n\n  // Effect to fetch messages when user's destination changes\n  useEffect(() => {\n    if (user && user.destination) {\n      fetchMessages();\n    }\n  }, [fetchMessages, user, user.destination]);\n\n  // Effect to update location periodically\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  // Function to get current location\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n            });\n          },\n          (error) => reject(error)\n        );\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  // Function to handle sending a message\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location,\n          destination: user.destination,\n          boundary: user.destination.boundary,\n          createdAt,\n          userId: user.id,\n        };\n\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageObject),\n        });\n\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null);\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = '';\n          }\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  // Function to handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Function to fetch nearby users\n  const fetchNearbyUsers = async () => {\n    try {\n      const { latitude, longitude, boundary } = user.destination;\n      const queryParams = new URLSearchParams({\n        latitude,\n        longitude,\n        northeast: JSON.stringify(boundary.northeast),\n        southwest: JSON.stringify(boundary.southwest),\n      });\n\n      const response = await fetch(`http://localhost:9000/api/users/nearby?${queryParams.toString()}`);\n      const data = await response.json();\n      if (data.success) {\n        setNearbyUsers(data.users);\n      } else {\n        console.error('Failed to fetch nearby users');\n      }\n    } catch (error) {\n      console.error('Error fetching nearby users:', error);\n    }\n  };\n\n  // Render JSX\n  return (\n    <div className=\"container\">\n      <h1>Welcome {user && user.username}</h1>\n      <h2 className=\"home-header\">Home Page</h2>\n      <MessageInputComponent\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n      />\n      <SearchPlaceComponent setDestination={setDestination} />\n      <button onClick={fetchNearbyUsers}>Find Nearby Users</button>\n      {nearbyUsers.length > 0 && (\n        <div className=\"nearby-users\">\n          <h3>Users near the destination:</h3>\n          <ul>\n            {nearbyUsers.map((user) => (\n              <li key={user._id}>{user.username}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <MessageListComponent messages={messages} />\n      <LogoutButtonComponent handleLogout={handleLogout} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}