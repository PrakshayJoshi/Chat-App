{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n    const initializeAutocomplete = () => {\n      const input = inputRef.current;\n      const autocomplete = new window.google.maps.places.Autocomplete(input);\n      autocomplete.setFields(['geometry', 'address_components']);\n      autocomplete.addListener('place_changed', () => onPlaceChanged(autocomplete));\n      setAutocomplete(autocomplete);\n    };\n    initializeAutocomplete();\n  }, []);\n  const onPlaceChanged = autocomplete => {\n    const place = autocomplete.getPlace();\n    if (!place.geometry) {\n      console.error('Place contains no geometry');\n      return;\n    }\n    const location = place.geometry.location;\n    const bounds = place.geometry.viewport;\n    setDestination({\n      latitude: location.lat(),\n      longitude: location.lng(),\n      viewport: {\n        north: bounds.getNorthEast().lat(),\n        east: bounds.getNorthEast().lng(),\n        south: bounds.getSouthWest().lat(),\n        west: bounds.getSouthWest().lng()\n      }\n    });\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: location,\n      zoom: 15\n    });\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n    const marker = new window.google.maps.Marker({\n      position: location,\n      map: map\n    });\n    markerRef.current = marker;\n    if (polygonRef.current) {\n      polygonRef.current.setMap(null);\n    }\n    const polygonCoords = [{\n      lat: bounds.getNorthEast().lat(),\n      lng: bounds.getNorthEast().lng()\n    }, {\n      lat: bounds.getNorthEast().lat(),\n      lng: bounds.getSouthWest().lng()\n    }, {\n      lat: bounds.getSouthWest().lat(),\n      lng: bounds.getSouthWest().lng()\n    }, {\n      lat: bounds.getSouthWest().lat(),\n      lng: bounds.getNorthEast().lng()\n    }];\n    const polygon = new window.google.maps.Polygon({\n      paths: polygonCoords,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35\n    });\n    polygon.setMap(map);\n    polygonRef.current = polygon;\n    const coordinates = polygonCoords.map(coord => [coord.lng, coord.lat]); // Convert to GeoJSON format\n\n    setDestination({\n      type: 'Polygon',\n      coordinates: coordinates\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-place-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      className: \"search-place-input\",\n      placeholder: \"Search for a place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"yPgPs9/73z2s0wZHWl9qaH68SyQ=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","autocomplete","setAutocomplete","inputRef","mapRef","markerRef","polygonRef","window","google","maps","console","error","initializeAutocomplete","input","current","places","Autocomplete","setFields","addListener","onPlaceChanged","place","getPlace","geometry","location","bounds","viewport","latitude","lat","longitude","lng","north","getNorthEast","east","south","getSouthWest","west","map","Map","center","zoom","setMap","marker","Marker","position","polygonCoords","polygon","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","coordinates","coord","type","className","children","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const [autocomplete, setAutocomplete] = useState(null);\n  const inputRef = useRef(null);\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const polygonRef = useRef(null);\n\n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps JavaScript API library must be loaded.');\n      return;\n    }\n\n    const initializeAutocomplete = () => {\n      const input = inputRef.current;\n      const autocomplete = new window.google.maps.places.Autocomplete(input);\n      autocomplete.setFields(['geometry', 'address_components']);\n      autocomplete.addListener('place_changed', () => onPlaceChanged(autocomplete));\n      setAutocomplete(autocomplete);\n    };\n\n    initializeAutocomplete();\n  }, []);\n\n  const onPlaceChanged = (autocomplete) => {\n    const place = autocomplete.getPlace();\n\n    if (!place.geometry) {\n      console.error('Place contains no geometry');\n      return;\n    }\n\n    const location = place.geometry.location;\n    const bounds = place.geometry.viewport;\n\n    setDestination({\n      latitude: location.lat(),\n      longitude: location.lng(),\n      viewport: {\n        north: bounds.getNorthEast().lat(),\n        east: bounds.getNorthEast().lng(),\n        south: bounds.getSouthWest().lat(),\n        west: bounds.getSouthWest().lng(),\n      },\n    });\n\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: location,\n      zoom: 15,\n    });\n\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n\n    const marker = new window.google.maps.Marker({\n      position: location,\n      map: map,\n    });\n    markerRef.current = marker;\n\n    if (polygonRef.current) {\n      polygonRef.current.setMap(null);\n    }\n\n    const polygonCoords = [\n      { lat: bounds.getNorthEast().lat(), lng: bounds.getNorthEast().lng() },\n      { lat: bounds.getNorthEast().lat(), lng: bounds.getSouthWest().lng() },\n      { lat: bounds.getSouthWest().lat(), lng: bounds.getSouthWest().lng() },\n      { lat: bounds.getSouthWest().lat(), lng: bounds.getNorthEast().lng() },\n    ];\n\n    const polygon = new window.google.maps.Polygon({\n      paths: polygonCoords,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n    });\n\n    polygon.setMap(map);\n    polygonRef.current = polygon;\n\n    const coordinates = polygonCoords.map(coord => [coord.lng, coord.lat]); // Convert to GeoJSON format\n\n    setDestination({\n      type: 'Polygon',\n      coordinates: coordinates\n    });\n  };\n\n  return (\n    <div className=\"search-place-container\">\n      <input\n        type=\"text\"\n        ref={inputRef}\n        className=\"search-place-input\"\n        placeholder=\"Search for a place\"\n      />\n      <div id=\"map\" ref={mapRef} className=\"map-container\"></div>\n    </div>\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}