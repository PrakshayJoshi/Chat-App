{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [location, setLocation] = useState({\n    latitude: null,\n    longitude: null\n  });\n  const {\n    user,\n    setUser\n  } = useUser();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    } else {\n      const updateLocation = () => {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setLocation({\n            latitude,\n            longitude\n          });\n          fetch(`http://localhost:9000/api/users/${user._id}/location`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n              latitude,\n              longitude\n            })\n          }).then(response => response.json()).then(data => console.log('Location updated in database:', data)).catch(error => console.error('Error updating location:', error));\n        });\n      };\n      updateLocation();\n      const intervalId = setInterval(updateLocation, 30000);\n      return () => clearInterval(intervalId);\n    }\n  }, [user, navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", location.latitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitude: \", location.longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"BZy0vivN4FkcVt8Z61igNsm9QqY=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useUser","jsxDEV","_jsxDEV","HomePage","_s","location","setLocation","latitude","longitude","user","setUser","navigate","updateLocation","navigator","geolocation","getCurrentPosition","position","coords","fetch","_id","method","headers","localStorage","getItem","body","JSON","stringify","then","response","json","data","console","log","catch","error","intervalId","setInterval","clearInterval","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../UserContext';\n\nconst HomePage = () => {\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\n  const { user, setUser } = useUser();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    } else {\n      const updateLocation = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const { latitude, longitude } = position.coords;\n          setLocation({ latitude, longitude });\n\n          fetch(`http://localhost:9000/api/users/${user._id}/location`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({ latitude, longitude })\n          })\n          .then(response => response.json())\n          .then(data => console.log('Location updated in database:', data))\n          .catch(error => console.error('Error updating location:', error));\n        });\n      };\n\n      updateLocation();\n      const intervalId = setInterval(updateLocation, 30000);\n      return () => clearInterval(intervalId);\n    }\n  }, [user, navigate]);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  return (\n    <div>\n      <h1>Home Page</h1>\n      <p>Welcome, {user?.username}!</p>\n      <button onClick={handleLogout}>Logout</button>\n      <p>Latitude: {location.latitude}</p>\n      <p>Longitude: {location.longitude}</p>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}