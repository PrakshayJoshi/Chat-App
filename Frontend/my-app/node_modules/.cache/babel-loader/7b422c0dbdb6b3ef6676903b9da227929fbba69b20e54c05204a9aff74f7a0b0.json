{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { getCurrentLocation } from '../services/locationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useUser();\n  const [location, setLocation] = useState(user.location);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const newLocation = await getCurrentLocation();\n        setLocation(newLocation);\n        // Update user location in your backend or state as needed\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n    fetchLocation(); // Initial fetch\n    const interval = setInterval(fetchLocation, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Location: \", location.latitude, \", \", location.longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", msg.location.latitude, \", \", msg.location.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"tXrMciNHluf0kJNr4G5EYo873ZA=\", false, function () {\n  return [useUser];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useUser","getCurrentLocation","jsxDEV","_jsxDEV","HomePage","_s","user","logout","location","setLocation","messages","setMessages","fetchLocation","newLocation","error","console","interval","setInterval","clearInterval","children","username","fileName","_jsxFileName","lineNumber","columnNumber","latitude","longitude","onClick","map","msg","index","text","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { getCurrentLocation } from '../services/locationService';\n\nconst HomePage = () => {\n  const { user, logout } = useUser();\n  const [location, setLocation] = useState(user.location);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const newLocation = await getCurrentLocation();\n        setLocation(newLocation);\n        // Update user location in your backend or state as needed\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n\n    fetchLocation(); // Initial fetch\n    const interval = setInterval(fetchLocation, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <h1>Welcome, {user.username}</h1>\n      <p>Current Location: {location.latitude}, {location.longitude}</p>\n      <button onClick={logout}>Logout</button>\n      <div>\n        <h2>Messages</h2>\n        {messages.map((msg, index) => (\n          <div key={index}>\n            <p>{msg.text}</p>\n            <p>Location: {msg.location.latitude}, {msg.location.longitude}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}