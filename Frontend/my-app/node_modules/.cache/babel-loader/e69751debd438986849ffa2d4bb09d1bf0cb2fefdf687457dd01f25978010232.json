{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$();\n// contexts/AuthContext.jsx\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Assume your logic to fetch user data from backend and set user state here\n    const fetchUser = async () => {\n      try {\n        const response = await fetch('/api/user');\n        const data = await response.json();\n        setUser(data.user);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async userData => {\n    try {\n      // Assume your logic to send login data to backend and handle response\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      setUser(data.user);\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n  const logout = () => {\n    // Assume your logic to clear user data from frontend\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","fetchUser","response","fetch","data","json","error","console","login","userData","method","headers","body","JSON","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/contexts/AuthContext.jsx"],"sourcesContent":["// contexts/AuthContext.jsx\n\nimport React, { createContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Assume your logic to fetch user data from backend and set user state here\n    const fetchUser = async () => {\n      try {\n        const response = await fetch('/api/user');\n        const data = await response.json();\n        setUser(data.user);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    };\n    fetchUser();\n  }, []);\n\n  const login = async (userData) => {\n    try {\n      // Assume your logic to send login data to backend and handle response\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n      const data = await response.json();\n      setUser(data.user);\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n\n  const logout = () => {\n    // Assume your logic to clear user data from frontend\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, AuthContext };\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;QACzC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,OAAO,CAACI,IAAI,CAACL,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAChC,IAAI;MACF;MACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;MAC/B,CAAC,CAAC;MACF,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,OAAO,CAACI,IAAI,CAACL,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAf,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAES,KAAK;MAAEO;IAAO,CAAE;IAAAlB,QAAA,EAClDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CA5CIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA8ClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}