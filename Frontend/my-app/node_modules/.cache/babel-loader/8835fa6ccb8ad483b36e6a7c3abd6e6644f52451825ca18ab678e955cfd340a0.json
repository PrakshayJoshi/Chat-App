{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/api.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/UserContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, signupUser, updateLocation } from '../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      const user = await loginUser(email, password);\n      setUser(user);\n      navigate('/home');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const signup = async (username, email, password, location) => {\n    try {\n      const user = await signupUser(username, email, password, location);\n      setUser(user);\n      navigate('/home');\n    } catch (error) {\n      console.error('Signup failed:', error);\n    }\n  };\n  useEffect(() => {\n    const updateLocationPeriodically = () => {\n      navigator.geolocation.getCurrentPosition(async position => {\n        if (user) {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          await updateLocation(user._id, latitude, longitude);\n        }\n      });\n    };\n    const intervalId = setInterval(updateLocationPeriodically, 30000);\n    return () => clearInterval(intervalId);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      signup\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nconst useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { UserProvider, useUser };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginUser","signupUser","updateLocation","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","navigate","login","email","password","error","console","signup","username","location","updateLocationPeriodically","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","_id","intervalId","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/api.js"],"sourcesContent":["// src/contexts/UserContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, signupUser, updateLocation } from '../api';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  const login = async (email, password) => {\n    try {\n      const user = await loginUser(email, password);\n      setUser(user);\n      navigate('/home');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  const signup = async (username, email, password, location) => {\n    try {\n      const user = await signupUser(username, email, password, location);\n      setUser(user);\n      navigate('/home');\n    } catch (error) {\n      console.error('Signup failed:', error);\n    }\n  };\n\n  useEffect(() => {\n    const updateLocationPeriodically = () => {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        if (user) {\n          const { latitude, longitude } = position.coords;\n          await updateLocation(user._id, latitude, longitude);\n        }\n      });\n    };\n\n    const intervalId = setInterval(updateLocationPeriodically, 30000);\n\n    return () => clearInterval(intervalId);\n  }, [user]);\n\n  return (\n    <UserContext.Provider value={{ user, login, signup }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nconst useUser = () => useContext(UserContext);\n\nexport { UserProvider, useUser };\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,SAAS,EAAEC,UAAU,EAAEC,cAAc,QAAQ,QAAQ;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMc,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAML,IAAI,GAAG,MAAMV,SAAS,CAACc,KAAK,EAAEC,QAAQ,CAAC;MAC7CJ,OAAO,CAACD,IAAI,CAAC;MACbE,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,MAAME,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEL,KAAK,EAAEC,QAAQ,EAAEK,QAAQ,KAAK;IAC5D,IAAI;MACF,MAAMV,IAAI,GAAG,MAAMT,UAAU,CAACkB,QAAQ,EAAEL,KAAK,EAAEC,QAAQ,EAAEK,QAAQ,CAAC;MAClET,OAAO,CAACD,IAAI,CAAC;MACbE,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMsB,0BAA0B,GAAGA,CAAA,KAAM;MACvCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;QAC3D,IAAIf,IAAI,EAAE;UACR,MAAM;YAAEgB,QAAQ;YAAEC;UAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;UAC/C,MAAM1B,cAAc,CAACQ,IAAI,CAACmB,GAAG,EAAEH,QAAQ,EAAEC,SAAS,CAAC;QACrD;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMG,UAAU,GAAGC,WAAW,CAACV,0BAA0B,EAAE,KAAK,CAAC;IAEjE,OAAO,MAAMW,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACpB,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,IAAI;MAAEG,KAAK;MAAEK;IAAO,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA5CIF,YAAY;EAAA,QAECJ,WAAW;AAAA;AAAAoC,EAAA,GAFxBhC,YAAY;AA8ClB,MAAMiC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5C,UAAU,CAACS,WAAW,CAAC;AAAA;AAACmC,GAAA,CAAxCD,OAAO;AAEb,SAASjC,YAAY,EAAEiC,OAAO;AAAG,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}