{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport EditMessageComponent from './EditMessageComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [usersInBoundary, setUsersInBoundary] = useState([]);\n  const navigate = useNavigate();\n  const [editingMessage, setEditingMessage] = useState(null); // New state for editing messages\n\n  const fetchUsersInBoundary = async coordinates => {\n    try {\n      const response = await fetch('http://localhost:9000/api/boundary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          coordinates\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch users in boundary');\n      }\n      const data = await response.json();\n      setUsersInBoundary(data.users);\n    } catch (error) {\n      console.error('Error fetching users in boundary:', error);\n    }\n  };\n  useEffect(() => {\n    if (destination && destination.coordinates) {\n      fetchUsersInBoundary(destination.coordinates);\n    }\n  }, [destination]);\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n    try {\n      const {\n        latitude,\n        longitude\n      } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitude,\n          longitude\n        })\n      });\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          setUser({\n            id: data.user.id,\n            username: data.user.username\n          });\n          localStorage.setItem('userId', data.user.id);\n          setUserState({\n            id: data.user.id,\n            username: data.user.username\n          });\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        }\n      }).catch(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        navigate('/login');\n      });\n    }\n  }, [navigate, setUser]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        }, error => reject(error));\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination,\n          boundary: destination ? {\n            // Add boundary information\n            type: 'circle',\n            radius: 1000,\n            // Example radius in meters\n            center: destination\n          } : null,\n          createdAt: createdAt,\n          userId: user.id\n        };\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null); // Clear the destination after sending the message\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = ''; // Clear the search box\n          }\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const startEditMessage = message => {\n    setEditingMessage(message);\n  };\n  const cancelEditMessage = () => {\n    setEditingMessage(null);\n  };\n  const saveEditMessage = async updatedMessage => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages/${updatedMessage._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedMessage)\n      });\n      if (response.ok) {\n        const updatedMessages = messages.map(msg => msg._id === updatedMessage._id ? updatedMessage : msg);\n        setMessages(updatedMessages);\n        setEditingMessage(null);\n      } else {\n        console.error('Failed to update message');\n      }\n    } catch (error) {\n      console.error('Error updating message:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user && user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"home-header\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInputComponent, {\n      message: message,\n      setMessage: setMessage,\n      handleKeyDown: handleKeyDown,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchPlaceComponent, {\n      setDestination: setDestination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageListComponent, {\n      messages: messages,\n      startEditMessage: startEditMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), editingMessage && /*#__PURE__*/_jsxDEV(EditMessageComponent, {\n      message: editingMessage,\n      saveEditMessage: saveEditMessage,\n      cancelEditMessage: cancelEditMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButtonComponent, {\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"RsWTRekqxVgAQZalDukvc8d7LF8=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useUser","useNavigate","MessageInputComponent","SearchPlaceComponent","MessageListComponent","LogoutButtonComponent","EditMessageComponent","jsxDEV","_jsxDEV","HomePage","_s","setUser","user","setUserState","message","setMessage","messages","setMessages","loading","setLoading","error","setError","destination","setDestination","usersInBoundary","setUsersInBoundary","navigate","editingMessage","setEditingMessage","fetchUsersInBoundary","coordinates","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","users","console","updateLocation","userId","localStorage","getItem","latitude","longitude","getCurrentLocation","log","token","then","success","id","username","setItem","removeItem","catch","fetchMessages","forEach","msg","index","location","intervalId","setInterval","clearInterval","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","handleKeyDown","event","key","sendMessage","trim","createdAt","Date","toISOString","messageObject","text","boundary","type","radius","center","searchBox","document","querySelector","value","startEditMessage","cancelEditMessage","saveEditMessage","updatedMessage","_id","updatedMessages","map","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport MessageInputComponent from './MessageInputComponent';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport EditMessageComponent from './EditMessageComponent';\n\nconst HomePage = () => {\n  const { setUser } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [usersInBoundary, setUsersInBoundary] = useState([]);\n  const navigate = useNavigate();\n  const [editingMessage, setEditingMessage] = useState(null); // New state for editing messages\n\n  const fetchUsersInBoundary = async (coordinates) => {\n    try {\n      const response = await fetch('http://localhost:9000/api/boundary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ coordinates }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch users in boundary');\n      }\n      const data = await response.json();\n      setUsersInBoundary(data.users);\n    } catch (error) {\n      console.error('Error fetching users in boundary:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (destination && destination.coordinates) {\n      fetchUsersInBoundary(destination.coordinates);\n    }\n  }, [destination]);\n\n\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n\n    try {\n      const { latitude, longitude } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ latitude, longitude }),\n      });\n\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            setUser({ id: data.user.id, username: data.user.username });\n            localStorage.setItem('userId', data.user.id);\n            setUserState({ id: data.user.id, username: data.user.username });\n            setLoading(false);\n          } else {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userId');\n            navigate('/login');\n          }\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        });\n    }\n  }, [navigate, setUser]);\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n            });\n          },\n          (error) => reject(error)\n        );\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  const handleKeyDown = async (event) => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination,\n          boundary: destination ? { // Add boundary information\n            type: 'circle',\n            radius: 1000, // Example radius in meters\n            center: destination\n          } : null,\n          createdAt: createdAt,\n          userId: user.id\n        };\n  \n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageObject),\n        });\n  \n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null); // Clear the destination after sending the message\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = ''; // Clear the search box\n          }\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  \n\n  const startEditMessage = (message) => {\n    setEditingMessage(message);\n  };\n\n  const cancelEditMessage = () => {\n    setEditingMessage(null);\n  };\n\n  const saveEditMessage = async (updatedMessage) => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages/${updatedMessage._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedMessage),\n      });\n\n      if (response.ok) {\n        const updatedMessages = messages.map((msg) =>\n          msg._id === updatedMessage._id ? updatedMessage : msg\n        );\n        setMessages(updatedMessages);\n        setEditingMessage(null);\n      } else {\n        console.error('Failed to update message');\n      }\n    } catch (error) {\n      console.error('Error updating message:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Welcome {user && user.username}</h1>\n      <h2 className=\"home-header\">Home Page</h2>\n      <MessageInputComponent\n        message={message}\n        setMessage={setMessage}\n        handleKeyDown={handleKeyDown}\n        sendMessage={sendMessage}\n      />\n      <SearchPlaceComponent setDestination={setDestination} />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <MessageListComponent messages={messages} startEditMessage={startEditMessage} />\n      {editingMessage && (\n        <EditMessageComponent\n          message={editingMessage}\n          saveEditMessage={saveEditMessage}\n          cancelEditMessage={cancelEditMessage}\n        />\n      )}\n      <LogoutButtonComponent handleLogout={handleLogout} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}