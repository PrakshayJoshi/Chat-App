{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const searchBoxRef = useRef(null);\n  useEffect(() => {\n    if (!searchBoxRef.current) return;\n    const autocomplete = new google.maps.places.Autocomplete(searchBoxRef.current);\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const location = {\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        };\n        setDestination(location);\n      }\n    });\n  }, [setDestination]);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for a place\",\n    ref: searchBoxRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"5H28GmWNw9mYOq1Ldw03NQ1A0H4=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","searchBoxRef","current","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","latitude","lat","longitude","lng","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const searchBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (!searchBoxRef.current) return;\n\n    const autocomplete = new google.maps.places.Autocomplete(searchBoxRef.current);\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const location = {\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        };\n        setDestination(location);\n      }\n    });\n  }, [setDestination]);\n\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search for a place\"\n      ref={searchBoxRef}\n    />\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,YAAY,CAACC,OAAO,EAAE;IAE3B,MAAMC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACN,YAAY,CAACC,OAAO,CAAC;IAC9EC,YAAY,CAACK,WAAW,CAAC,eAAe,EAAE,MAAM;MAC9C,MAAMC,KAAK,GAAGN,YAAY,CAACO,QAAQ,CAAC,CAAC;MACrC,IAAID,KAAK,CAACE,QAAQ,EAAE;QAClB,MAAMC,QAAQ,GAAG;UACfC,QAAQ,EAAEJ,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACE,GAAG,CAAC,CAAC;UACvCC,SAAS,EAAEN,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACI,GAAG,CAAC;QACzC,CAAC;QACDjB,cAAc,CAACa,QAAQ,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACb,cAAc,CAAC,CAAC;EAEpB,oBACEF,OAAA;IACEoB,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,oBAAoB;IAChCC,GAAG,EAAElB;EAAa;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEN,CAAC;AAACvB,EAAA,CA1BIF,oBAAoB;AAAA0B,EAAA,GAApB1B,oBAAoB;AA4B1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}