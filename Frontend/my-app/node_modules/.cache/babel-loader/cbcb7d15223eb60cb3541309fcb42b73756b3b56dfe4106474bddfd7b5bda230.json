{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/HomePage.css';\nimport SearchPlaceComponent from './SearchPlaceComponent';\nimport MessageInputComponent from './MessageInputComponent';\nimport MessageListComponent from './MessageListComponent';\nimport LogoutButtonComponent from './LogoutButtonComponent';\nimport EditMessageComponent from './EditMessageComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null); // State to hold destination\n  const navigate = useNavigate();\n  const [usersInBoundary, setUsersInBoundary] = useState([]);\n  const [editingMessage, setEditingMessage] = useState(null);\n\n  // Update location for the user periodically\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n    try {\n      const {\n        latitude,\n        longitude\n      } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitude,\n          longitude\n        })\n      });\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  // Validate token and set user state\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          setUser({\n            id: data.user.id,\n            username: data.user.username\n          });\n          localStorage.setItem('userId', data.user.id);\n          setUserState({\n            id: data.user.id,\n            username: data.user.username\n          });\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        }\n      }).catch(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        navigate('/login');\n      });\n    }\n  }, [navigate, setUser]);\n\n  // Fetch messages when component mounts\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  // Log message locations when messages change\n  useEffect(() => {\n    messages.forEach((msg, index) => {\n      console.log(`Message ${index} Location:`, msg.location);\n    });\n  }, [messages]);\n\n  // Update location periodically\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  // Fetch messages from server\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  // Get current geolocation\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        }, error => reject(error));\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  // Handle Enter key to send message\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n\n  // Send message to server\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const createdAt = new Date().toISOString();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination,\n          boundary: destination ? {\n            // Add boundary information\n            type: 'circle',\n            radius: destination.radius,\n            // Dynamic radius\n            center: destination\n          } : null,\n          createdAt: createdAt,\n          userId: user.id\n        };\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage('');\n          setDestination(null); // Clear the destination after sending the message\n          const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n          if (searchBox) {\n            searchBox.value = ''; // Clear the search box\n          }\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  // Start editing a message\n  const startEditMessage = message => {\n    setEditingMessage(message);\n  };\n\n  // Cancel editing a message\n  const cancelEditMessage = () => {\n    setEditingMessage(null);\n  };\n\n  // Save edited message\n  const saveEditMessage = async updatedMessage => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/messages/${updatedMessage._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedMessage)\n      });\n      if (response.ok) {\n        const updatedMessages = messages.map(msg => msg._id === updatedMessage._id ? updatedMessage : msg);\n        setMessages(updatedMessages);\n        setEditingMessage(null);\n      } else {\n        console.error('Failed to update message');\n      }\n    } catch (error) {\n      console.error('Error updating message:', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Fetch users in boundary based on destination\n  useEffect(() => {\n    const fetchUsersInBoundary = async () => {\n      if (!destination) return;\n      try {\n        const response = await fetch('http://localhost:9000/api/boundary', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            destination\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setUsersInBoundary(data.users);\n        } else {\n          console.error('Error fetching users in boundary:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching users in boundary:', error);\n      }\n    };\n    fetchUsersInBoundary();\n  }, [destination]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-button-container\",\n        children: /*#__PURE__*/_jsxDEV(LogoutButtonComponent, {\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchPlaceComponent, {\n        setDestination: setDestination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageInputComponent, {\n        message: message,\n        setMessage: setMessage,\n        handleSubmit: handleSubmit,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), editingMessage ? /*#__PURE__*/_jsxDEV(EditMessageComponent, {\n        message: editingMessage,\n        handleCancel: handleCancelEdit,\n        handleSave: handleSaveEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(MessageListComponent, {\n        messages: messages,\n        handleEdit: handleEditMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this), usersInBoundary.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-in-boundary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users within boundary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersInBoundary.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 7\n  }, this);\n};\n_s(HomePage, \"dEZ7cIUVFL3miX7q3jlp+ir+iLQ=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useUser","useNavigate","SearchPlaceComponent","MessageInputComponent","MessageListComponent","LogoutButtonComponent","EditMessageComponent","jsxDEV","_jsxDEV","HomePage","_s","setUser","user","setUserState","message","setMessage","messages","setMessages","loading","setLoading","error","setError","destination","setDestination","navigate","usersInBoundary","setUsersInBoundary","editingMessage","setEditingMessage","updateLocation","userId","localStorage","getItem","console","latitude","longitude","getCurrentLocation","log","response","fetch","method","headers","body","JSON","stringify","ok","token","then","json","data","success","id","username","setItem","removeItem","catch","fetchMessages","forEach","msg","index","location","intervalId","setInterval","clearInterval","Error","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","handleKeyDown","event","key","sendMessage","trim","createdAt","Date","toISOString","messageObject","text","boundary","type","radius","center","searchBox","document","querySelector","value","startEditMessage","cancelEditMessage","saveEditMessage","updatedMessage","_id","updatedMessages","map","handleLogout","fetchUsersInBoundary","users","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","handleCancel","handleCancelEdit","handleSave","handleSaveEdit","handleEdit","handleEditMessage","length","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["  import React, { useState, useEffect, useCallback } from 'react';\n  import { useUser } from '../contexts/UserContext';\n  import { useNavigate } from 'react-router-dom';\n  import '../styles/HomePage.css';\n  import SearchPlaceComponent from './SearchPlaceComponent';\n  import MessageInputComponent from './MessageInputComponent';\n  import MessageListComponent from './MessageListComponent';\n  import LogoutButtonComponent from './LogoutButtonComponent';\n  import EditMessageComponent from './EditMessageComponent';\n\n  const HomePage = () => {\n    const { setUser } = useUser();\n    const [user, setUserState] = useState(null);\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [destination, setDestination] = useState(null); // State to hold destination\n    const navigate = useNavigate();\n    const [usersInBoundary, setUsersInBoundary] = useState([]);\n    const [editingMessage, setEditingMessage] = useState(null);\n\n    // Update location for the user periodically\n    const updateLocation = useCallback(async () => {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        console.error('No user ID found in localStorage');\n        return;\n      }\n\n      try {\n        const { latitude, longitude } = await getCurrentLocation();\n        console.log('Updating location for user:', userId);\n        const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ latitude, longitude }),\n        });\n\n        if (response.ok) {\n          console.log('Location updated');\n        } else {\n          console.error('Failed to update location');\n        }\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    }, []);\n\n    // Validate token and set user state\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n      } else {\n        fetch('http://localhost:9000/api/auth/validate-token', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        })\n          .then(response => response.json())\n          .then(data => {\n            if (data.success) {\n              setUser({ id: data.user.id, username: data.user.username });\n              localStorage.setItem('userId', data.user.id);\n              setUserState({ id: data.user.id, username: data.user.username });\n              setLoading(false);\n            } else {\n              localStorage.removeItem('token');\n              localStorage.removeItem('userId');\n              navigate('/login');\n            }\n          })\n          .catch(() => {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userId');\n            navigate('/login');\n          });\n      }\n    }, [navigate, setUser]);\n\n    // Fetch messages when component mounts\n    useEffect(() => {\n      fetchMessages();\n    }, []);\n\n    // Log message locations when messages change\n    useEffect(() => {\n      messages.forEach((msg, index) => {\n        console.log(`Message ${index} Location:`, msg.location);\n      });\n    }, [messages]);\n\n    // Update location periodically\n    useEffect(() => {\n      const intervalId = setInterval(updateLocation, 30000);\n      return () => clearInterval(intervalId);\n    }, [updateLocation]);\n\n    // Fetch messages from server\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/api/messages');\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        setMessages(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    // Get current geolocation\n    const getCurrentLocation = async () => {\n      return new Promise((resolve, reject) => {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              resolve({\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n              });\n            },\n            (error) => reject(error)\n          );\n        } else {\n          reject(new Error('Geolocation is not supported by this browser.'));\n        }\n      });\n    };\n\n    // Handle Enter key to send message\n    const handleKeyDown = async (event) => {\n      if (event.key === 'Enter') {\n        await sendMessage();\n      }\n    };\n\n    // Send message to server\n    const sendMessage = async () => {\n      if (message.trim() !== '') {\n        try {\n          const location = await getCurrentLocation();\n          const createdAt = new Date().toISOString();\n          const messageObject = {\n            text: message,\n            location: location,\n            destination: destination,\n            boundary: destination ? { // Add boundary information\n              type: 'circle',\n              radius: destination.radius, // Dynamic radius\n              center: destination\n            } : null,\n            createdAt: createdAt,\n            userId: user.id\n          };\n\n          const response = await fetch('http://localhost:9000/api/messages/send', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(messageObject),\n          });\n\n          const data = await response.json();\n          console.log('Success:', data);\n          if (data.success) {\n            setMessages([data.message, ...messages]);\n            setMessage('');\n            setDestination(null); // Clear the destination after sending the message\n            const searchBox = document.querySelector('input[type=\"text\"][placeholder=\"Search for a place\"]');\n            if (searchBox) {\n              searchBox.value = ''; // Clear the search box\n            }\n          }\n        } catch (error) {\n          console.error('Error sending message:', error);\n        }\n      }\n    };\n\n    // Start editing a message\n    const startEditMessage = (message) => {\n      setEditingMessage(message);\n    };\n\n    // Cancel editing a message\n    const cancelEditMessage = () => {\n      setEditingMessage(null);\n    };\n\n    // Save edited message\n    const saveEditMessage = async (updatedMessage) => {\n      try {\n        const response = await fetch(`http://localhost:9000/api/messages/${updatedMessage._id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(updatedMessage),\n        });\n\n        if (response.ok) {\n          const updatedMessages = messages.map((msg) =>\n            msg._id === updatedMessage._id ? updatedMessage : msg\n          );\n          setMessages(updatedMessages);\n          setEditingMessage(null);\n        } else {\n          console.error('Failed to update message');\n        }\n      } catch (error) {\n        console.error('Error updating message:', error);\n      }\n    };\n\n    // Handle logout\n    const handleLogout = () => {\n      localStorage.removeItem('token');\n      setUser(null);\n      navigate('/login');\n    };\n\n    // Fetch users in boundary based on destination\n    useEffect(() => {\n      const fetchUsersInBoundary = async () => {\n        if (!destination) return;\n  \n        try {\n          const response = await fetch('http://localhost:9000/api/boundary', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ destination }),\n          });\n  \n          const data = await response.json();\n          if (data.success) {\n            setUsersInBoundary(data.users);\n          } else {\n            console.error('Error fetching users in boundary:', data.message);\n          }\n        } catch (error) {\n          console.error('Error fetching users in boundary:', error);\n        }\n      };\n  \n      fetchUsersInBoundary();\n    }, [destination]);\n  \n\n    return (\n      <div className=\"home-page\">\n      <h1>Welcome to the Home Page</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          <div className=\"logout-button-container\">\n            <LogoutButtonComponent handleLogout={handleLogout} />\n          </div>\n          <SearchPlaceComponent setDestination={setDestination} />\n          <MessageInputComponent\n            message={message}\n            setMessage={setMessage}\n            handleSubmit={handleSubmit}\n            error={error}\n          />\n          {editingMessage ? (\n            <EditMessageComponent\n              message={editingMessage}\n              handleCancel={handleCancelEdit}\n              handleSave={handleSaveEdit}\n            />\n          ) : (\n            <MessageListComponent\n              messages={messages}\n              handleEdit={handleEditMessage}\n            />\n          )}\n          {usersInBoundary.length > 0 && (\n            <div className=\"users-in-boundary\">\n              <h2>Users within boundary:</h2>\n              <ul>\n                {usersInBoundary.map(user => (\n                  <li key={user._id}>{user.username}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n    );\n  };\n\n  export default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}