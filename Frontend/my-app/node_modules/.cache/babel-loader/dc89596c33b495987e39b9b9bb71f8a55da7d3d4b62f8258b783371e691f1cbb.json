{"ast":null,"code":"var _s = $RefreshSig$();\n// LocationUpdater.jsx\nimport { useEffect } from 'react';\nconst LocationUpdater = ({\n  userId\n}) => {\n  _s();\n  useEffect(() => {\n    const updateLocation = async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const location = {\n            type: 'Point',\n            coordinates: [position.coords.longitude, position.coords.latitude]\n          };\n          try {\n            const response = await fetch('http://localhost:9000/api/users/update-location', {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                userId,\n                location\n              })\n            });\n            if (!response.ok) {\n              console.error('Failed to update location');\n            }\n          } catch (error) {\n            console.error('Error updating location:', error);\n          }\n        });\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n      }\n    };\n    const intervalId = setInterval(updateLocation, 300000); // Check every 5 minutes\n\n    return () => clearInterval(intervalId); // Clean up interval on unmount\n  }, [userId]);\n  return null;\n};\n_s(LocationUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LocationUpdater;\nexport default LocationUpdater;\nvar _c;\n$RefreshReg$(_c, \"LocationUpdater\");","map":{"version":3,"names":["useEffect","LocationUpdater","userId","_s","updateLocation","navigator","geolocation","getCurrentPosition","position","location","type","coordinates","coords","longitude","latitude","response","fetch","method","headers","body","JSON","stringify","ok","console","error","intervalId","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/LocationUpdater.jsx"],"sourcesContent":["// LocationUpdater.jsx\nimport { useEffect } from 'react';\n\nconst LocationUpdater = ({ userId }) => {\n  useEffect(() => {\n    const updateLocation = async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n          const location = {\n            type: 'Point',\n            coordinates: [position.coords.longitude, position.coords.latitude],\n          };\n          try {\n            const response = await fetch('http://localhost:9000/api/users/update-location', {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ userId, location }),\n            });\n            if (!response.ok) {\n              console.error('Failed to update location');\n            }\n          } catch (error) {\n            console.error('Error updating location:', error);\n          }\n        });\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n      }\n    };\n\n    const intervalId = setInterval(updateLocation, 300000); // Check every 5 minutes\n\n    return () => clearInterval(intervalId); // Clean up interval on unmount\n  }, [userId]);\n\n  return null;\n};\n\nexport default LocationUpdater;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtCH,SAAS,CAAC,MAAM;IACd,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;UAC3D,MAAMC,QAAQ,GAAG;YACfC,IAAI,EAAE,OAAO;YACbC,WAAW,EAAE,CAACH,QAAQ,CAACI,MAAM,CAACC,SAAS,EAAEL,QAAQ,CAACI,MAAM,CAACE,QAAQ;UACnE,CAAC;UACD,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;cAC9EC,MAAM,EAAE,KAAK;cACbC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEnB,MAAM;gBAAEO;cAAS,CAAC;YAC3C,CAAC,CAAC;YACF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;cAChBC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;YAC5C;UACF,CAAC,CAAC,OAAOA,KAAK,EAAE;YACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAClD;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLD,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;MAChE;IACF,CAAC;IAED,MAAMC,UAAU,GAAGC,WAAW,CAACtB,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;;IAExD,OAAO,MAAMuB,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAnCIF,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}