{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const searchBoxRef = useRef(null);\n  useEffect(() => {\n    if (!searchBoxRef.current) return;\n    const initializeAutocomplete = () => {\n      const autocomplete = new window.google.maps.places.Autocomplete(searchBoxRef.current);\n      autocomplete.addListener('place_changed', async () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry) {\n          const location = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng()\n          };\n\n          // Fetch additional place details if needed\n          const placeDetails = await fetchPlaceDetails(place.place_id);\n          location.details = placeDetails;\n          setDestination(location);\n        }\n      });\n    };\n    if (window.google && window.google.maps && window.google.maps.places) {\n      initializeAutocomplete();\n    }\n  }, [setDestination]);\n  const fetchPlaceDetails = async placeId => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/place-details?place_id=${placeId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Place details:', data);\n    } catch (error) {\n      console.error('Failed to fetch place details:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"search-place-input\",\n    type: \"text\",\n    placeholder: \"Search for a place\",\n    ref: searchBoxRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"5H28GmWNw9mYOq1Ldw03NQ1A0H4=\");\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","searchBoxRef","current","initializeAutocomplete","autocomplete","window","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","latitude","lat","longitude","lng","placeDetails","fetchPlaceDetails","place_id","details","placeId","response","fetch","ok","Error","status","data","json","console","log","error","className","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport '../styles/SearchPlaceComponent.css';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const searchBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (!searchBoxRef.current) return;\n\n    const initializeAutocomplete = () => {\n      const autocomplete = new window.google.maps.places.Autocomplete(searchBoxRef.current);\n      autocomplete.addListener('place_changed', async () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry) {\n          const location = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng(),\n          };\n\n          // Fetch additional place details if needed\n          const placeDetails = await fetchPlaceDetails(place.place_id);\n          location.details = placeDetails;\n          \n          setDestination(location);\n        }\n      });\n    };\n\n    if (window.google && window.google.maps && window.google.maps.places) {\n      initializeAutocomplete();\n    }\n  }, [setDestination]);\n\n  const fetchPlaceDetails = async (placeId) => {\n    try {\n      const response = await fetch(`http://localhost:9000/api/place-details?place_id=${placeId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Place details:', data);\n    } catch (error) {\n      console.error('Failed to fetch place details:', error);\n    }\n  };\n  \n  \n\n  return (\n    <input\n      className=\"search-place-input\"\n      type=\"text\"\n      placeholder=\"Search for a place\"\n      ref={searchBoxRef}\n    />\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,YAAY,CAACC,OAAO,EAAE;IAE3B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;MACnC,MAAMC,YAAY,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACR,YAAY,CAACC,OAAO,CAAC;MACrFE,YAAY,CAACM,WAAW,CAAC,eAAe,EAAE,YAAY;QACpD,MAAMC,KAAK,GAAGP,YAAY,CAACQ,QAAQ,CAAC,CAAC;QACrC,IAAID,KAAK,CAACE,QAAQ,EAAE;UAClB,MAAMC,QAAQ,GAAG;YACfC,QAAQ,EAAEJ,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACE,GAAG,CAAC,CAAC;YACvCC,SAAS,EAAEN,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACI,GAAG,CAAC;UACzC,CAAC;;UAED;UACA,MAAMC,YAAY,GAAG,MAAMC,iBAAiB,CAACT,KAAK,CAACU,QAAQ,CAAC;UAC5DP,QAAQ,CAACQ,OAAO,GAAGH,YAAY;UAE/BpB,cAAc,CAACe,QAAQ,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ,CAAC;IAED,IAAIT,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,IAAIF,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,EAAE;MACpEL,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMqB,iBAAiB,GAAG,MAAOG,OAAO,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmDF,OAAQ,EAAC,CAAC;MAC3F,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAID,oBACEpC,OAAA;IACEqC,SAAS,EAAC,oBAAoB;IAC9BC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,oBAAoB;IAChCC,GAAG,EAAEpC;EAAa;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEN,CAAC;AAACzC,EAAA,CArDIF,oBAAoB;AAAA4C,EAAA,GAApB5C,oBAAoB;AAuD1B,eAAeA,oBAAoB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}