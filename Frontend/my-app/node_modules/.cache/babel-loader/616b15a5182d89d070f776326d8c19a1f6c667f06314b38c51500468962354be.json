{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/LoginPage.jsx\",\n  _s = $RefreshSig$();\n// LoginPage.jsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Function to handle signup\n  const handleSignUp = async () => {\n    try {\n      // Get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n\n          // Create signup data with username, email, password, latitude, and longitude\n          const signupData = {\n            username,\n            email,\n            password,\n            latitude,\n            longitude\n          };\n\n          // Send signup request to backend\n          const response = await fetch('http://localhost:9000/api/users/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(signupData)\n          });\n          const data = await response.json();\n          console.log('Signup successful:', data);\n        });\n      } else {\n        console.log('Geolocation is not supported by this browser.');\n      }\n    } catch (error) {\n      console.error('Error signing up:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignUp,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","email","setEmail","password","setPassword","handleSignUp","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","signupData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/LoginPage.jsx"],"sourcesContent":["// LoginPage.jsx\n\nimport React, { useState } from 'react';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Function to handle signup\n  const handleSignUp = async () => {\n    try {\n      // Get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Create signup data with username, email, password, latitude, and longitude\n          const signupData = {\n            username,\n            email,\n            password,\n            latitude,\n            longitude\n          };\n          \n          // Send signup request to backend\n          const response = await fetch('http://localhost:9000/api/users/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(signupData)\n          });\n          \n          const data = await response.json();\n          console.log('Signup successful:', data);\n        });\n      } else {\n        console.log('Geolocation is not supported by this browser.');\n      }\n    } catch (error) {\n      console.error('Error signing up:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <button onClick={handleSignUp}>Sign Up</button>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}