{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPlaceComponent = ({\n  setDestination\n}) => {\n  _s();\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300\n  });\n  const ref = useOnclickOutside(() => {\n    clearSuggestions();\n  });\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n  const handleSelect = async description => {\n    setValue(description, false);\n    clearSuggestions();\n    try {\n      const results = await getGeocode({\n        address: description\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      const placeId = results[0].place_id;\n\n      // Fetch place details including radius (if available)\n      const placeDetailsResponse = await fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&key=YOUR_API_KEY`);\n      const placeDetails = await placeDetailsResponse.json();\n      const radius = placeDetails.result.geometry.viewport ? placeDetails.result.geometry.viewport.northeast : 1000; // Default to 1000 if not available\n\n      setDestination({\n        latitude: lat,\n        longitude: lng,\n        radius\n      });\n    } catch (error) {\n      console.log('Error: ', error);\n    }\n  };\n  const renderSuggestions = () => data.map(suggestion => {\n    const {\n      id,\n      structured_formatting: {\n        main_text,\n        secondary_text\n      }\n    } = suggestion;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => handleSelect(suggestion.description),\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: main_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: secondary_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 40\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: handleInput,\n      disabled: !ready,\n      placeholder: \"Search for a place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), status === 'OK' && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderSuggestions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPlaceComponent, \"weXuCcR9+z8lMfl3g0Y+NiUJhsQ=\", false, function () {\n  return [usePlacesAutocomplete, useOnclickOutside];\n});\n_c = SearchPlaceComponent;\nexport default SearchPlaceComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPlaceComponent\");","map":{"version":3,"names":["React","useState","usePlacesAutocomplete","getGeocode","getLatLng","useOnclickOutside","jsxDEV","_jsxDEV","SearchPlaceComponent","setDestination","_s","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","debounce","ref","handleInput","e","target","handleSelect","description","results","address","lat","lng","placeId","place_id","placeDetailsResponse","fetch","placeDetails","json","radius","result","geometry","viewport","northeast","latitude","longitude","error","console","log","renderSuggestions","map","suggestion","id","structured_formatting","main_text","secondary_text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","placeholder","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/SearchPlaceComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\n\nconst SearchPlaceComponent = ({ setDestination }) => {\n  const { ready, value, suggestions: { status, data }, setValue, clearSuggestions } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n  const ref = useOnclickOutside(() => {\n    clearSuggestions();\n  });\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (description) => {\n    setValue(description, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address: description });\n      const { lat, lng } = await getLatLng(results[0]);\n      const placeId = results[0].place_id;\n\n      // Fetch place details including radius (if available)\n      const placeDetailsResponse = await fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&key=YOUR_API_KEY`);\n      const placeDetails = await placeDetailsResponse.json();\n      const radius = placeDetails.result.geometry.viewport ? placeDetails.result.geometry.viewport.northeast : 1000; // Default to 1000 if not available\n\n      setDestination({ latitude: lat, longitude: lng, radius });\n    } catch (error) {\n      console.log('Error: ', error);\n    }\n  };\n\n  const renderSuggestions = () => \n    data.map((suggestion) => {\n      const {\n        id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n\n      return (\n        <li key={id} onClick={() => handleSelect(suggestion.description)}>\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  return (\n    <div ref={ref}>\n      <input\n        value={value}\n        onChange={handleInput}\n        disabled={!ready}\n        placeholder=\"Search for a place\"\n      />\n      {status === 'OK' && <ul>{renderSuggestions()}</ul>}\n    </div>\n  );\n};\n\nexport default SearchPlaceComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}