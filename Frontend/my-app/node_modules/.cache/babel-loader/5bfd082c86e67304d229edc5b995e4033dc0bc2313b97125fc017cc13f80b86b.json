{"ast":null,"code":"// src/api.js\nconst API_URL = 'http://localhost:9000/api'; // Adjust if needed\n\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.setItem('token', data.token);\n    return data.user;\n  }\n  throw new Error(data.error || 'Login failed');\n};\nexport const signupUser = async (username, email, password, location) => {\n  const response = await fetch(`${API_URL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      location\n    })\n  });\n  const data = await response.json();\n  if (response.ok) {\n    return data.user;\n  }\n  throw new Error(data.error || 'Signup failed');\n};\nexport const sendMessage = async (text, location) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}/messages/send`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      text,\n      location\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error || 'Failed to send message');\n  }\n  return data.message;\n};\nexport const getMessages = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}/messages`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error || 'Failed to fetch messages');\n  }\n  return data;\n};\nexport const updateLocation = async (userId, latitude, longitude) => {\n  const token = localStorage.getItem('token');\n  await fetch(`${API_URL}/users/${userId}/location`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      latitude,\n      longitude\n    })\n  });\n};","map":{"version":3,"names":["API_URL","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","user","Error","error","signupUser","username","location","sendMessage","text","getItem","Authorization","message","getMessages","updateLocation","userId","latitude","longitude"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/api.js"],"sourcesContent":["// src/api.js\nconst API_URL = 'http://localhost:9000/api'; // Adjust if needed\n\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.setItem('token', data.token);\n    return data.user;\n  }\n  throw new Error(data.error || 'Login failed');\n};\n\nexport const signupUser = async (username, email, password, location) => {\n  const response = await fetch(`${API_URL}/users/register`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ username, email, password, location }),\n  });\n  const data = await response.json();\n  if (response.ok) {\n    return data.user;\n  }\n  throw new Error(data.error || 'Signup failed');\n};\n\nexport const sendMessage = async (text, location) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}/messages/send`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ text, location }),\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error || 'Failed to send message');\n  }\n  return data.message;\n};\n\nexport const getMessages = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${API_URL}/messages`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error || 'Failed to fetch messages');\n  }\n  return data;\n};\n\nexport const updateLocation = async (userId, latitude, longitude) => {\n  const token = localStorage.getItem('token');\n  await fetch(`${API_URL}/users/${userId}/location`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ latitude, longitude }),\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}