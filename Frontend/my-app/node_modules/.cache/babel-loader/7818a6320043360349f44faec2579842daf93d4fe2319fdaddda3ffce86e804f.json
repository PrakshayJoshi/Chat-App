{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\n// HomePage.jsx\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport '../styles/HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:9000'); // Replace with your server URL if different\n\nconst HomePage = () => {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const searchBoxRef = useRef(null);\n  const navigate = useNavigate();\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n    try {\n      const {\n        latitude,\n        longitude\n      } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latitude,\n          longitude\n        })\n      });\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          setUser({\n            id: data.user.id,\n            username: data.user.username\n          });\n          localStorage.setItem('userId', data.user.id);\n          setUserState({\n            id: data.user.id,\n            username: data.user.username\n          });\n          setLoading(false);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        }\n      }).catch(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        navigate('/login');\n      });\n    }\n  }, [navigate, setUser]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    socket.on('newMessage', message => {\n      setMessages(prevMessages => [message, ...prevMessages]);\n    });\n    return () => {\n      socket.off('newMessage');\n    };\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n  useEffect(() => {\n    if (!searchBoxRef.current) return;\n    const autocomplete = new google.maps.places.Autocomplete(searchBoxRef.current);\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const location = {\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        };\n        setDestination(location);\n      }\n    });\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        }, error => reject(error));\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n  const handleKeyDown = async event => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination\n        };\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageObject)\n        });\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage(''); // Clear the message input\n          if (searchBoxRef.current) {\n            searchBoxRef.current.value = ''; // Clear the search input\n          }\n          setDestination(null); // Clear the destination state\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user && user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"home-page-title\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: handleKeyDown,\n      placeholder: \"Write something...\",\n      className: \"message-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"searchBox\",\n      placeholder: \"Search a place\",\n      ref: searchBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 18\n    }, this) : error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"From: \", msg.location.latitude, \", \", msg.location.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To: \", msg.destination.latitude, \", \", msg.destination.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"At: \", new Date(msg.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"6bvgFer3Y1iF9/NN5vJNfwmKn8A=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useUser","useNavigate","io","jsxDEV","_jsxDEV","socket","HomePage","_s","setUser","user","setUserState","message","setMessage","messages","setMessages","loading","setLoading","error","setError","destination","setDestination","searchBoxRef","navigate","updateLocation","userId","localStorage","getItem","console","latitude","longitude","getCurrentLocation","log","response","fetch","method","headers","body","JSON","stringify","ok","token","then","json","data","success","id","username","setItem","removeItem","catch","fetchMessages","on","prevMessages","off","intervalId","setInterval","clearInterval","current","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","lat","lng","Error","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","handleKeyDown","event","key","sendMessage","trim","messageObject","text","value","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","onKeyDown","placeholder","ref","map","msg","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["// HomePage.jsx\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport '../styles/HomePage.css';\n\nconst socket = io('http://localhost:9000'); // Replace with your server URL if different\n\nconst HomePage = () => {\n  const { setUser } = useUser();\n  const [user, setUserState] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const searchBoxRef = useRef(null);\n  const navigate = useNavigate();\n\n  const updateLocation = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      console.error('No user ID found in localStorage');\n      return;\n    }\n\n    try {\n      const { latitude, longitude } = await getCurrentLocation();\n      console.log('Updating location for user:', userId);\n      const response = await fetch(`http://localhost:9000/api/users/${userId}/location`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ latitude, longitude }),\n      });\n\n      if (response.ok) {\n        console.log('Location updated');\n      } else {\n        console.error('Failed to update location');\n      }\n    } catch (error) {\n      console.error('Error updating location:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetch('http://localhost:9000/api/auth/validate-token', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            setUser({ id: data.user.id, username: data.user.username });\n            localStorage.setItem('userId', data.user.id);\n            setUserState({ id: data.user.id, username: data.user.username });\n            setLoading(false);\n          } else {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userId');\n            navigate('/login');\n          }\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('userId');\n          navigate('/login');\n        });\n    }\n  }, [navigate, setUser]);\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  useEffect(() => {\n    socket.on('newMessage', (message) => {\n      setMessages(prevMessages => [message, ...prevMessages]);\n    });\n\n    return () => {\n      socket.off('newMessage');\n    };\n  }, []);\n\n  useEffect(() => {\n    const intervalId = setInterval(updateLocation, 30000);\n    return () => clearInterval(intervalId);\n  }, [updateLocation]);\n\n  useEffect(() => {\n    if (!searchBoxRef.current) return;\n\n    const autocomplete = new google.maps.places.Autocomplete(searchBoxRef.current);\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const location = {\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng()\n        };\n        setDestination(location);\n      }\n    });\n  }, []);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentLocation = async () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n            });\n          },\n          (error) => reject(error)\n        );\n      } else {\n        reject(new Error('Geolocation is not supported by this browser.'));\n      }\n    });\n  };\n\n  const handleKeyDown = async (event) => {\n    if (event.key === 'Enter') {\n      await sendMessage();\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() !== '') {\n      try {\n        const location = await getCurrentLocation();\n        const messageObject = {\n          text: message,\n          location: location,\n          destination: destination\n        };\n\n        const response = await fetch('http://localhost:9000/api/messages/send', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageObject),\n        });\n\n        const data = await response.json();\n        console.log('Success:', data);\n        if (data.success) {\n          setMessages([data.message, ...messages]);\n          setMessage(''); // Clear the message input\n          if (searchBoxRef.current) {\n            searchBoxRef.current.value = ''; // Clear the search input\n          }\n          setDestination(null); // Clear the destination state\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Welcome {user && user.username}</h1>\n      <h2 className=\"home-page-title\">Home Page</h2>\n      <button onClick={handleLogout}>Logout</button>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Write something...\"\n        className=\"message-input\"\n      />\n      <input\n        type=\"text\"\n        id=\"searchBox\"\n        placeholder=\"Search a place\"\n        ref={searchBoxRef}\n      />\n      <button onClick={sendMessage}>Send</button>\n      {loading ? <p>Loading...</p> : error && <p>{error}</p>}\n      <div className=\"message-list\">\n        {messages.map((msg) => (\n          <div key={msg._id} className=\"message-item\">\n            <p><strong>{msg.text}</strong></p>\n            <p>From: {msg.location.latitude}, {msg.location.longitude}</p>\n            <p>To: {msg.destination.latitude}, {msg.destination.longitude}</p>\n            <p>At: {new Date(msg.createdAt).toLocaleString()}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}