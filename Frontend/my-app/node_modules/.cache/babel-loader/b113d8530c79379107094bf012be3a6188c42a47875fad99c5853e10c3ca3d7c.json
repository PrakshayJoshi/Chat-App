{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUser();\n    }\n  }, []);\n  const fetchUser = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const response = await fetch('http://localhost:9000/api/auth/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        setUser(data.user);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      logout();\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:9000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        navigate('/');\n      } else {\n        console.error('Login failed:', data.error);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","token","localStorage","getItem","fetchUser","response","fetch","headers","data","json","success","logout","error","console","login","email","password","method","body","JSON","stringify","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUser();\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n\n    try {\n      const response = await fetch('http://localhost:9000/api/auth/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      const data = await response.json();\n      if (data.success) {\n        setUser(data.user);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      logout();\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:9000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        navigate('/');\n      } else {\n        console.error('Login failed:', data.error);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTG,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMH,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,OAAO,EAAE;UACP,eAAe,EAAG,UAASN,KAAM;QACnC;MACF,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBX,OAAO,CAACS,IAAI,CAACV,IAAI,CAAC;MACpB,CAAC,MAAM;QACLa,MAAM,CAAC,CAAC;MACV;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CD,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAED,MAAMG,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEW,MAAM,EAAE,MAAM;QACdV,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMR,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBR,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEb,IAAI,CAACP,KAAK,CAAC;QACzCF,OAAO,CAACS,IAAI,CAACV,IAAI,CAAC;QAClBE,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLa,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEJ,IAAI,CAACI,KAAK,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,MAAMD,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;IAChCvB,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEgB,KAAK;MAAEH;IAAO,CAAE;IAAAf,QAAA,EAClDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CAnEWF,YAAY;EAAA,QAENJ,WAAW;AAAA;AAAAsC,EAAA,GAFjBlC,YAAY;AAqEzB,OAAO,MAAMmC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACqC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}